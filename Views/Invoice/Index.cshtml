@using Microsoft.AspNetCore.Http
@model WebENG.Models.UserModel;
@{
    ViewData["Title"] = "Summary Invoice ENG";
}

<div class="row p-4" style="row-gap:5px">
    <div class="col-xl-12">
        <div class="card card-dark">
            <div class="card-body">
                <div class="row" style="row-gap:10px">
                    <div class="col-xl-4">
                    </div>
                    <div class="col-xl-2">
                        <select id="departments" class="form-control">
                            <option value="" selected disabled>Please Select Department</option>
                            <option value="ENG">ENG</option>
                            <option value="CIS">CIS</option>
                            <option value="AIS">AIS</option>
                        </select>
                    </div>
                    <div class="col-xl-2">
                        <select id="year" class="form-control">
                            <option value="" selected disabled>Please Select Year</option>
                        </select>
                    </div>
                    <div class="col-xl-2">
                        <button id="btnUpdate" type="button" class="btn btn-primary form-control">
                            Update
                        </button>
                    </div>
                    <div class="col-xl-2">
                        <button id="btnExport" type="button" class="btn btn-success form-control">
                            Export
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card card-dark">
            <div class="card-body">
                <canvas id="chart_acc_invoice" style="height:400px" />
            </div>
        </div>
        <div class="card card-dark">
            <div class="card-body">
                <canvas id="chart_invoice" style="height:400px" />
            </div>
        </div>
        <div class="card card-dark">
            <div class="card-header">
                <span id="label_job" class="card-title">JOB IN HAND & SALES TURNOVER ENG FOR</span>
            </div>
            <div class="card-body" style="overflow-x:auto">
                <table id="table" class="table table-sm table-bordered table-hover text-center table-striped nowrap" style="width:100%">
                    <thead style="color:black;background-color:#0C9DF0">
                        <tr>
                            <th colspan="1" rowspan="2" style="text-align:center;vertical-align:middle;"></th>
                            <th colspan="2" style="text-align:center;vertical-align:middle;">Job In Hand</th>
                            <th colspan="2" style="text-align:center;vertical-align:middle;">Invoice</th>
                            <th colspan="2" style="text-align:center;vertical-align:middle;">Pending</th>
                        </tr>
                        <tr>
                            <th style="text-align:center;vertical-align:middle;">Volume (MB)</th>
                            <th style="text-align:center;vertical-align:middle;">No. Of Job</th>
                            <th style="text-align:center;vertical-align:middle;">Volume (MB)</th>
                            <th style="text-align:center;vertical-align:middle;">Complete Job</th>
                            <th style="text-align:center;vertical-align:middle;">Volume (MB)</th>
                            <th style="text-align:center;vertical-align:middle;">Incomplete Job</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
        <div class="card card-dark">
            <div class="card-body">
                <canvas id="chart_order_in_take" style="height:400px" />
            </div>
        </div>
    </div>
</div>
@section Scripts
{
<script type="text/javascript">
    let table;
    let chart_invoice;
    let chart_acc_invoice;
    let chart_order_in_take;
    let invoices = [];
    let acc_invoices = [];
    let summary_quarters = [];
    let orders_in_take = [];
    $(document).ready(async function () {
        getYear();
    });
    function getYear(){
        var year_string = "";
        var today = new Date();
        var year = today.getFullYear();
        for (var i = year; i > year - 5; i--) {
            year_string += `<option value="${i}">${i}</option>`;
        }
        $('#year').empty();
        $('#year').append(year_string);
    };

    async function GetInvoice(department,year) {
        await $.ajax({
            type: "GET",
            url: '@Url.Action("GetInvoice", "Invoice")',
            contentType: 'application/x-www-form-urlencoded',
            data: { department,year },
            success: function (response) {
                invoices = response;
            }
        });
    };

    async function GetAccInvoice(department,year) {
        await $.ajax({
            type: "GET",
            url: '@Url.Action("GetAccInvoice", "Invoice")',
            contentType: 'application/x-www-form-urlencoded',
            data: { department,year },
            success: function (response) {
                acc_invoices = response;
            }
        });
    };
    async function GetSummaryQuarter(department,year){
        await $.ajax({
            type: "GET",
            url: '@Url.Action("GetSummaryQuarter", "Invoice")',
            contentType: 'application/x-www-form-urlencoded',
            data: { department,year },
            success: function (response) {
                summary_quarters = response;
            }
        });
    };

    async function GetOrderInTake(department,year){
        await $.ajax({
            type: "GET",
            url: '@Url.Action("GetOrderInTake", "Invoice")',
            contentType: 'application/x-www-form-urlencoded',
            data: { department,year },
            success: function (response) {
                orders_in_take = response;
            }
        });
    };

    $('#btnUpdate').on('click',async function(){
        let year = $('#year').val();
        let department = $('#departments :selected').text();
        $('#label_job').html(`JOB IN HAND & SALES TURNOVER ENG FOR ${year}`);
        await GetInvoice(department,year);
        await GetAccInvoice(department,year);
        await GetSummaryQuarter(department,year);
        await GetOrderInTake(department,year);
        GenerateChartInvoice(year,invoices);
        GenerateChartAccInvoice(year,acc_invoices);
        GenerateTable(summary_quarters);
        GenerateOrderInTake(year,orders_in_take);
    });

    function GenerateChartInvoice(year,invoices) {

        let colors = ['#04CA13', '#F0390C'];

        let months = invoices.map(m => m.month);
        let targets = invoices.map(m => m.target_month);
        let actuals = invoices.map(m => m.invoice);

        if (chart_invoice !== undefined) {
            chart_invoice.destroy();
        }

        const ctx = document.getElementById('chart_invoice').getContext('2d');
        chart_invoice = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: months,
                datasets: [
                    {
                        label: 'Target',
                        data: targets,
                        borderWidth: 3,
                        backgroundColor: colors[0],
                        borderColor: colors[0]
                    },
                    {
                        label: 'Actual',
                        data: actuals,
                        borderWidth: 3,
                        backgroundColor: colors[1],
                        borderColor: colors[1]
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        title: {
                            text: "MB",
                            display: true
                        },
                        stacked: false,
                        beginAtZero: true
                    }
                },
                plugins: {
                    title: {
                        text: `SUMMARY SALE TURNOVER OF JOB ENG OF ${year}`,
                        font: {
                            size: 16
                        },
                        display: true
                    },
                    legend: {
                        position: 'bottom',
                        display: true
                    }
                },
            }
        });
    }

    function GenerateChartAccInvoice(year,invoices) {
        let colors = ['#04CA13', '#F0390C'];

        let months = invoices.map(m => m.month);
        let targets = invoices.map(m => m.target_month);
        let actuals = invoices.map(m => m.invoice);

        if (chart_acc_invoice !== undefined) {
            chart_acc_invoice.destroy();
        }

        const ctx = document.getElementById('chart_acc_invoice').getContext('2d');
        chart_acc_invoice = new Chart(ctx, {
            type: 'line',
            data: {
                labels: months,
                datasets: [
                    {
                        label: 'Target',
                        data: targets,
                        borderWidth: 3,
                        backgroundColor: colors[0],
                        borderColor: colors[0]
                    },
                    {
                        label: 'Actual',
                        data: actuals,
                        borderWidth: 3,
                        backgroundColor: colors[1],
                        borderColor: colors[1]
                    }
                ]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        title: {
                            text: "MB",
                            display: true
                        },
                        stacked: false,
                        beginAtZero: true
                    }
                },
                plugins: {
                    title: {
                        text: `ACCUMULATE SALE TURNOVER OF JOB ENG OF ${year}`,
                        font: {
                              size: 16
                        },
                        display: true
                    },
                    legend: {
                        position: 'bottom',
                        display: true
                    }
                },
            }
        });
    }

    function GenerateTable(items) {
            if (table !== null)
                $('#table').DataTable().destroy();

            let datas = [];
            for (let i=0;i<items.length;i++){
                var data = [
                    items[i].quarter,
                    Number(items[i].job_in_hand_volume).toFixed(3),
                    items[i].job_in_hand,
                    Number(items[i].invoice_volume).toFixed(3),
                    items[i].invoice,
                    Number(items[i].pending_volume).toFixed(3),
                    items[i].pending
                ];
                datas.push(data);
            };

            table = $('#table').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                columnDefs: [
                    {

                    },
                ],
                rowCallback: function (row, data) {
                    let type = data[0];
                    if (type === "Summary"){
                         $('td', row).css("background-color","#0C9DF0");
                         $('td', row).css("font-weight","600");
                    }
                },
                searching: false,
                ordering: false,
                paging: false,
                info : false
            });
    };

    function GenerateOrderInTake(year,datas){
            if (chart_order_in_take != null){
                chart_order_in_take.destroy();
            }
            var chartName = "chart_order_in_take";
            var ctx = document.getElementById(chartName).getContext('2d');

            var years = [];
            var backlogs = [];
            var jobs_eng_in_hand = [];
            var targets = [];

            //get datas
            for (var i =0; i<datas.length;i++){
                years.push(datas[i].year);
                backlogs.push(datas[i].backlog);
                jobs_eng_in_hand.push(datas[i].job_eng_in_hand);
                targets.push(datas[i].target);
            }
            var labels = years;
            const data = {
                              labels: labels,
                              datasets: [                               
                                {
                                  label: 'ENG Job In Hand',
                                  data: jobs_eng_in_hand,
                                  backgroundColor: '#203864',
                                  stack: 'Stack 0',
                                },
                                {
                                  label: 'Backlog',
                                  data: backlogs,
                                  backgroundColor: '#1E83C6',
                                  stack: 'Stack 0',
                                },
                                {
                                  label: 'Target',
                                  data: targets,
                                  backgroundColor: '#1FDCEC',
                                  stack: 'Stack 1',
                                },
                              ],
                        };

                        const options = {
                            responsive: true,
                            maintainAspectRatio: false,
                              scales: {
                                y: {
                                    title: {
                                        text: "MB",
                                        display: true
                                    },
                                    stacked: true,
                                    beginAtZero: true
                                }
                            },
                            plugins: {
                                title: {
                                    text: `TREND ORDER IN TAKE ENG JOB OF Y2019 - Y${year}`,
                                    font: {
                                            size: 16
                                    },
                                    display: true
                                },
                                legend: {
                                    position: 'bottom',
                                    display: true
                                }
                            },

                        };
                        chart_order_in_take = new Chart(ctx, { type: 'bar', data: data, options: options });             
        };
    $('#btnExport').on('click',function(){
        let year = $('#year').val();
        location.href = '@Url.Action("ExportSummarySaleTurnOver", "Invoice")?year='+ year;
    });
</script>
}