@using Microsoft.AspNetCore.Http
@model WebENG.Models.UserModel;
@{
    ViewData["Title"] = "Jobs";
}
<style>
    #table_job_file {
        cursor: pointer;
    }
</style>
<div class="row p-3">
    @if (Model.role == "Admin")
    {
        <div class="col-xl-1 pb-3">
            <button id="btn_create" type="button" class="btn btn-primary form-control elevation-1">
                <i class="fas fa-plus"></i> Create Job
            </button>
        </div>
    }
    <div class="col-xl-1 pb-3">
        @*<button id="btn_import" type="button" class="btn btn-primary form-control elevation-1" hidden>
            <i class="fas fa-upload"></i> Import
        </button>*@
    </div>
    <div class="col-xl-1 pb-3">
        @*<button id="btn_export" type="button" class="btn btn-warning form-control elevation-1" hidden>
            <i class="fas fa-download"></i> Export
        </button>*@
    </div>
    <div class="col-xl-12">
        <div class="card card-dark">
            <div class="card-header">
                <span class="card-title">Jobs</span>
                <div class="card-tools ml-auto">
                    <button id="btn_export" type="button" class="btn btn-warning form-control">
                        <i class="fas fa-download"></i> Export
                    </button>
                </div>
            </div>
                <div class="card-body">
                    <table id="table_job" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Quotation</th>
                                <th>Customer</th>
                                <th>End User</th>
                                <th>Sale Name</th>
                                <th>Department</th>
                                <th>Process</th>
                                <th>System</th>
                                <th>Cost</th>
                                <th>MD</th>
                                <th>PD</th>
                                <th>FT</th>
                                <th>MP</th>
                                <th>Cost/MP</th>
                                <th>OT MP</th>
                                <th>Status</th>
                                <th>C SAT.</th>
                                <th>GP</th>
                                <th>EST Cost</th>
                                <th>Total Cost</th>
                                <th>Remaining Cost</th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                        <tfoot class="text-center">
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Quotation</th>
                                <th>Customer</th>
                                <th>End User</th>
                                <th>Sale Name</th>
                                <th>Department</th>
                                <th>Process</th>
                                <th>System</th>
                                <th>Cost</th>
                                <th>MD</th>
                                <th>PD</th>
                                <th>FT</th>
                                <th>MP</th>
                                <th>Cost/MP</th>
                                <th>OT MP</th>
                                <th>Status</th>
                                <th>C SAT.</th>
                                <th>GP</th>
                                <th>EST Cost</th>
                                <th>Total Cost</th>
                                <th>Remaining Cost</th>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
    </div>
</div>

<div class="modal fade" id="modal_job" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" style="overflow-y:auto">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title"><b>Create Job</b></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-4">
                            <label for="job_id">Job Number</label>
                            <input id="job_id" type="text" class="form-control" placeholder="JYYXXXX" />
                        </div>
                        <div class="col-8">
                            <label for="job_name">Job Name</label>
                            <input id="job_name" type="text" class="form-control" placeholder="Job Name" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-3">
                            <label for="job_date">Job Date</label>
                            <input id="job_date" type="date" class="form-control" />
                        </div>
                        <div class="col-2">
                            <label for="quotation_no">Quotation</label>
                            <input id="quotation_no" type="text" class="form-control" placeholder="Quotation Number" list="quotations" />
                            <datalist id="quotations"></datalist>
                        </div>
                        <div class="col-2">
                            <label for="job_type">Job Type</label>
                            <input id="job_type" type="text" class="form-control" placeholder="" />
                        </div>
                        <div class="col-5">
                            <label for="job_customer">Customer</label>
                            <input id="job_customer" type="text" class="form-control" placeholder="" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-5">
                            <label for="select_sale">Sale</label>
                            <select id="select_sale" class="form-control">
                            </select>
                        </div>
                        <div class="col-2">
                            <label for="sale_department">Sale Department</label>
                            <input id="sale_department" type="text" class="form-control" placeholder="" />
                        </div>
                        <div class="col-5">
                            <label for="end_user">End User</label>
                            <input id="end_user" type="text" class="form-control" placeholder="" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-4">
                            <label for="gp">%GP</label>
                            <div class="input-group">
                                <input id="gp" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">%</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <label for="est_cost">EST Cost</label>
                            <div class="input-group">
                                <input id="est_cost" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">THB</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <label for="cost">ENG Cost</label>
                            <div class="input-group">
                                <input id="cost" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">THB</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-4">
                            <label for="md_rate">Market Develop</label>
                            <div class="input-group">
                                <input id="md_rate" type="number" class="form-control" placeholder="#.#" value="1.0" step="0.1" min="0" max="10" />
                                <div class="input-group-append">
                                    <span class="input-group-text">X</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group ">
                                <label for="pd_rate">Product Develop</label>
                                <div class="input-group">
                                    <input id="pd_rate" type="number" class="form-control" placeholder="#.#" value="1.0" step="0.1" min="0" max="10" />
                                    <div class="input-group-append">
                                        <span class="input-group-text">X</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-12">
                            <div class="card" style="overflow-x:auto">
                                <div class="card-header" style="background-color:#42D5D8">
                                    <span style="font-weight:bold">Job File</span>
                                </div>
                                <div class="card-body">                                   
                                    <div class="form-row pt-1">
                                        <div class="col-12">
                                            <table id="table_job_file" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                                                <thead style="background-color:#42B4D8">
                                                    <tr>
                                                        <th>หัวข้อ</th>
                                                        <th style="text-align:center">ไฟล์แนบ</th>
                                                        <th style="width:10%"></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-6">
                            <div class="card">
                                <div class="card-header" style="background-color:#42D5D8">
                                    <span style="font-weight:bold;">Process</span>
                                </div>
                                <div class="card-body">
                                    <div class="form-row">
                                        <div class="col-9">
                                            <label for="select_process">Process</label>
                                            <select id="select_process" class="form-control">
                                            </select>
                                        </div>
                                        <div class="col-3">
                                            <label for="add_process">Add</label>
                                            <button id="add_process" type="button" class="btn btn-primary form-control elevation-1" disabled>
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-row pt-1">
                                        <div class="col-12">
                                            <table id="table_process" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                                                <thead style="background-color:#42B4D8">
                                                    <tr>
                                                        <th>Process</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="card">
                                <div class="card-header" style="background-color:#42D5D8">
                                    <span style="font-weight:bold">System</span>
                                </div>
                                <div class="card-body">
                                    <div class="form-row">
                                        <div class="col-9">
                                            <label for="select_system">System</label>
                                            <select id="select_system" class="form-control">
                                            </select>
                                        </div>
                                        <div class="col-3">
                                            <label for="add_system">Add</label>
                                            <button id="add_system" type="button" class="btn btn-primary form-control elevation-1" disabled>
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-row pt-1">
                                        <div class="col-12">
                                            <table id="table_system" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                                                <thead style="background-color:#42B4D8">
                                                    <tr>
                                                        <th>System</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header" style="background-color:#42D5D8">
                                    <span style="font-weight:bold">Term Payment</span>
                                </div>
                                <div class="card-body">
                                    <div class="form-row">
                                        <div class="col-5">
                                            <label for="select_payment">Term Payment</label>
                                            <select id="select_payment" class="form-control">
                                            </select>
                                        </div>
                                        <div class="col-2 col-md-2">
                                            <label for="add_payment">Add</label>
                                            <button id="add_payment" type="button" class="btn btn-primary form-control elevation-1" disabled>
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-row pt-1">
                                        <div class="col-12">
                                            <table id="table_payment" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                                                <thead style="background-color:#42B4D8">
                                                    <tr>
                                                        <th>Milestone</th>
                                                        <th>%</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-4">
                            <label for="cost">Total Job In Hand</label>
                            <div class="input-group">
                                <input id="job_in_hand" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">THB</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <label for="cost">ENG Job In Hand</label>
                            <div class="input-group">
                                <input id="job_eng_in_hand" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">THB</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <label for="due_date">Due Date</label>
                            <input id="due_date" type="date" class="form-control" value="1900-01-01" />
                        </div>
                    </div>
                    <div class="form-row pt-2">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header" style="background-color:#42D5D8">
                                    <div class="row">
                                        <div class="col-10 d-flex justify-content-start pt-2">
                                            <span style="font-weight:bold">Invoice</span>
                                        </div>
                                        <div class="col-2 col-md-2 d-flex justify-content-end">
                                            <button id="add_invoice" type="button" class="btn btn-primary form-control elevation-1" style="width:50px">
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="form-row pt-1">
                                        <div class="col-12" style="overflow-x:auto">
                                            <table id="table_invoice" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                                                <thead style="background-color:#42B4D8">
                                                    <tr>
                                                        <th>No</th>
                                                        <th>ID</th>
                                                        <th>Milestone</th>
                                                        <th>Invoice</th>
                                                        <th>Plan Date</th>
                                                        <th>Actual Date</th>
                                                        <th>New Plan Date</th>
                                                        <th>Status</th>
                                                        <th>Remark</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="col-6 pt-1">
                                        <div class="row">
                                            <div class="col-2 pt-1">
                                                <label for="cost">รวม</label>
                                            </div>
                                            <div class="col-10">
                                                <div class="input-group">
                                                    <input id="invoice" type="text" class="form-control" placeholder="0" value="0" />
                                                    <div class="input-group-append">
                                                        <span class="input-group-text">THB</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-3">
                            <label for="bank_guarantee">Bank Guarantee</label>
                            <div class="input-group">
                                <input id="bank_guarantee" type="number" class="form-control" placeholder="#" value="0" step="1" min="0" max="100" />
                                <div class="input-group-append">
                                    <span class="input-group-text">%</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-3">
                            <label for="bg_start">BG Start</label>
                            <input id="bg_start" type="date" class="form-control" />
                        </div>
                        <div class="col-3">
                            <label for="bg_finish">BG Finish</label>
                            <input id="bg_finish" type="date" class="form-control" />
                        </div>
                        <div class="col-3">
                            <div class="form-group ">
                                <label for="retention">Retention</label>
                                <div class="input-group">
                                    <input id="retention" type="number" class="form-control" placeholder="#" value="0" step="1" min="0" max="100" />
                                    <div class="input-group-append">
                                        <span class="input-group-text">%</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-4">
                            <label for="total_cost">Total Cost</label>
                            <div class="input-group">
                                <input id="total_cost" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">THB</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <label for="remaining_cost">Remaining Cost</label>
                            <div class="input-group">
                                <input id="remaining_cost" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">THB</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-2">
                            <label for="btn_cal_gp">Calculate GP</label>
                            <input id="btn_cal_gp" type="button" class="form-control btn btn-primary" value="Cal GP" />
                        </div>
                        <div class="col-2">
                            <label for="gp_improve">%GP Improve</label>
                            <div class="input-group">
                                <input id="gp_improve" type="number" class="form-control" placeholder="0" value="0" disabled />
                                <div class="input-group-append">
                                    <span class="input-group-text">%</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-5">
                            <label for="status">Status</label>
                            <select id="status" class="form-control">
                            </select>
                        </div>
                        <div class="col-4" id="group_finished_date">
                            <label for="finished_date">Date Finished</label>
                            <input id="finished_date" type="date" class="form-control" value="1900-01-01" />
                        </div>
                        <div class="col-3" id="group_warranty_period">
                            <label for="warranty_period">Warranty Period</label>
                            <input id="warranty_period" type="number" class="form-control" value="0" disabled />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="btn_save" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_edit_payment" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title"><b>Edit Term Payment</b></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-8">
                            <label for="edit_payment_name">Term Payment</label>
                            <input id="edit_payment_name" type="text" class="form-control" placeholder="" disabled/>
                        </div>
                        <div class="col-4">
                            <label for="edit_percent">Percent</label>
                            <input id="edit_percent" type="number" class="form-control" placeholder="" />
                        </div>
                    </div>                                       
                </form>
            </div>
            <div class="modal-footer">
                <button id="btn_payment_delete" type="button" class="btn btn-danger mr-auto elevation-1">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="btn_payment_save" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_edit_invoice" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title"><b>Edit Invoice</b></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-2">
                            <label for="edit_invoice_no">No</label>
                            <input id="edit_invoice_no" type="text" class="form-control" placeholder="" disabled />
                        </div>
                        <div class="col-2">
                            <label for="edit_invoice_id">ID</label>
                            <input id="edit_invoice_id" type="number" class="form-control" placeholder="" disabled />
                        </div>
                        <div class="col-8">
                            <label for="edit_invoice_milestone">Milestone</label>
                            <select id="edit_invoice_milestone" class="form-control"></select>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-4">
                            <label for="edit_invoice">Invoice</label>
                            <input id="edit_invoice" type="number" class="form-control" placeholder="" />
                        </div>
                        <div class="col-4">
                            <label for="edit_invoice_plan_date">Plan Date</label>
                            <input id="edit_invoice_plan_date" type="date" class="form-control" placeholder="" />
                        </div>
                        <div class="col-4">
                            <label for="edit_invoice_actual_date">Actual Date</label>
                            <input id="edit_invoice_actual_date" type="date" class="form-control" placeholder="" />
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-4">
                            <label for="edit_invoice_status">Status</label>
                            <select id="edit_invoice_status" class="form-control"></select>
                        </div>
                        <div class="col-4">
                            <label for="edit_invoice_remark">Remark</label>
                            <textarea id="edit_invoice_remark" cols="50" rows="3" class="form-control"></textarea>
                        </div>
                        <div class="col-4">
                            <label for="edit_invoice_new_plan_date">New Plan Date</label>
                            <input id="edit_invoice_new_plan_date" type="date" class="form-control" placeholder="" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="btn_invoice_delete" type="button" class="btn btn-danger mr-auto elevation-1">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="btn_invoice_save" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_edit_process" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title"><b>Edit Process</b></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-12">
                            <label for="edit_process_name">Process</label>
                            <input id="edit_process_name" type="text" class="form-control" placeholder="" disabled/>
                        </div>
                    </div>                                       
                </form>
            </div>
            <div class="modal-footer">
                <button id="btn_process_delete" type="button" class="btn btn-danger mr-auto elevation-1">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_edit_system" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title"><b>Edit System</b></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-12">
                            <label for="edit_system_name">System</label>
                            <input id="edit_system_name" type="text" class="form-control" placeholder="" disabled/>
                        </div>
                    </div>                                       
                </form>
            </div>
            <div class="modal-footer">
                <button id="btn_system_delete" type="button" class="btn btn-danger mr-auto elevation-1">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ImportJobFileModal" tabindex="-1" role="dialog" style="overflow-y:auto" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"><b>อัพเดทไฟล์</b></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="modal-body">
                    <form>
                        <div class="row pt-1" style="row-gap:1px">
                            <div class="col-xl-12">
                                <div class="card elevation-1">
                                    <div class="card-header">
                                        <span class="card-title">
                                            <i class="fas fa-file-excel"></i> <b> Import File</b>
                                        </span>
                                    </div>
                                    <div class="card-body">
                                        <div class="form-group">
                                            <label id="importJobFileName">File Name</label>
                                            <input id="importJobFile" type="file" class="form-control-file" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        //Variable Declaration
        let table;
        let table_payment;
        let table_process;
        let table_system;
        let table_invoice;
        let table_job_file;

        let update = false;
        let jobs = [];
        let users = [];
        let quots = [];
        let statuses = [];
        let processes = [];
        let systems = [];
        let all_users = [];
        let set_payments = [];
        let set_processes = [];
        let set_systems = [];
        let set_invoice = [];
        let job_files = [];
        let status_invoices = ['', 'วางบิลแล้ว', 'คาดว่าจะวางบิลได้ภายในเดือน', 'อยู่ระหว่างรอลูกค้าตรวจรับงาน', 'ยังไม่เริ่มงาน', 'เลื่อน', 'งานยกเลิก'];
        //Change these parameters to true to show result
        let debug_jobs = false;
        let debug_user = false;
        let debug_job_string = false;
        let debug_quots = false;

        $(document).ready(async function () {
            await GetStatus();
            await GetAllUsers();
            await GenerateStatusOption();
            await GeneratePaymentOption();
            await GetProcess();
            await GetSystem();
            await GenerateProcessOption();
            await GenerateSystemOption();
            await GenerateAllUser();
            GetJobs();
        });

        async function GetJobs() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetJobs", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    jobs = response;
                    if (debug_jobs) {
                        console.log(jobs);
                    }
                    GenerateTable(jobs);
                }
            });
        };

        async function GetUsers() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetUsers", "EngUser")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    users = response;
                    if (debug_user) {
                        console.log(users);
                    }
                }
            });
        }

        async function GetQuotations() {
            let today = new Date();
            let year = today.getFullYear().toString().substring(2, 4);
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetQuotations", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    quots = response;
                    if (debug_quots) {
                        console.log(quots);
                    }
                }
            });
        }

        async function GetProcess() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetProcesses", "EngProcess")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    processes = response;
                }
            });
        }
        async function GetSystem() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetSystems", "EngSystem")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    systems = response;
                }
            });
        }

        function GenerateProcessOption() {
            let process = $('#select_process').val();
            $('#select_process').empty();
            $('#select_process').append(`<option value="" selected disabled>Please Select Process</option>`);
            for (let i = 0; i < processes.length; i++) {
                if (processes[i].process_name === process || process === "" || process === null) {
                    $('#select_process').append(`<option value="${processes[i].process_id}">${processes[i].process_id}: ${processes[i].process_name}</option>`);
                }
            }
        }

        function GenerateSystemOption() {
            let system = $('#select_system').val();
            $('#select_system').empty();
            $('#select_system').append(`<option value="" selected disabled>Please Select System</option>`);
            for (let i = 0; i < systems.length; i++) {
                if (systems[i].system_name === system || system === "" || system === null) {
                    $('#select_system').append(`<option value="${systems[i].system_id}">${systems[i].system_id}: ${systems[i].system_name}</option>`);
                }
            }
        }

        async function GetAllUsers() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetAllUsers", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {  },
                success: function (response) {
                    all_users = response;
                }
            });
        };

        function GenerateAllUser() {
            let user = $('#select_sale').val();
            $('#select_sale').empty();
            $('#select_sale').append(`<option value="" selected disabled>Please Select Sale</option>`);
            for (let i = 0; i < all_users.length; i++) {
                if (all_users[i].user_name === user || user === "" || user === null) {
                    $('#select_sale').append(`<option value="${all_users[i].user_name}">${all_users[i].user_name}</option>`);
                }
            }
        }

        async function GetStatus() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetStatus", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {  },
                success: function (response) {
                    statuses = response;
                }
            });
        };
        function GenerateTable(jobs) {
            let datas = [];
            if (table !== null)
                $('#table_job').DataTable().destroy();

            for (let i = 0; i < jobs.length; i++) {

                let countProcess = (jobs[i].process.match(/,/g) || []).length;
                let countSystem = (jobs[i].system.match(/,/g) || []).length;

                let process = "";
                let system = "";

                for (let k=0;k<=countProcess;k++ ){
                    if (k < countProcess){
                        process += processes.filter(f=> f.process_id === jobs[i].process.split(',')[k]).map(m=> m.process_name) + ",";
                    }else{
                        process += processes.filter(f=> f.process_id === jobs[i].process.split(',')[k]).map(m=> m.process_name);
                    }
                }

                for (let k=0;k<=countSystem;k++ ){
                    if (k < countSystem){
                        system += systems.filter(f=> f.system_id === jobs[i].system.split(',')[k]).map(m=> m.system_name) + ",";
                    }else{
                        system += systems.filter(f=> f.system_id === jobs[i].system.split(',')[k]).map(m=> m.system_name);
                    }
                }
                datas.push([
                    jobs[i].job_id,
                    jobs[i].job_name,
                    jobs[i].quotation_no,
                    jobs[i].customer,
                    jobs[i].enduser,
                    jobs[i].sale_name,
                    jobs[i].department,
                    process,
                    system,
                    jobs[i].cost.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                    jobs[i].md_rate,
                    jobs[i].pd_rate,
                    jobs[i].md_rate * jobs[i].pd_rate, //Factor
                    jobs[i].manpower,
                    jobs[i].cost_per_manpower,
                    jobs[i].ot_manpower,
                    jobs[i].status,
                    "", //Customer Satisfaction
                    jobs[i].gp,
                    jobs[i].est_cost,
                    jobs[i].total_cost,
                    jobs[i].remaining_cost
                ]);
            }

            table = $('#table_job').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                fixedHeader: true,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    {
                        targets: [4, 5, 6, 10, 11, 13, 14, 15,18,19,20,21],
                        visible: false
                    },
                ],
                rowCallback: function (row, data) {
                    $('td:eq(1)', row).addClass("text-left");
                    $('td:eq(3)', row).addClass("text-left");
                    let code_status = data[16];
                    let status = statuses.filter(f=>f.status_id === code_status).map(m=>m.status_name);
                    let status_str =  '';
                    if (code_status === "STA999"){
                        status_str = `<span class="badge badge-success">${status}</span>`;
                    }else{
                        status_str = `<span class="badge badge-warning">${status}</span>`;
                    }

                    $('td:eq(8)', row).html(status_str);
                }
            });
        };

        function GenerateTablePayment(payments) {
            let datas = [];
            if (table_payment !== null)
                $('#table_payment').DataTable().destroy();

            for (let i = 0; i < payments.length; i++) {

                let payment = payments[i].payment_name;
                let percent = payments[i].percent;

                datas.push([
                    payment,
                    percent
                ]);
            }

            table_payment = $('#table_payment').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                fixedHeader: true,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    {

                    },
                ],
                rowCallback: function (row, data) {

                },
                searching: false,
                ordering: false,
                paging: false,
                info : false
            });
        };

        function GenerateTableProcess(processes) {
            let datas = [];
            if (table_process !== null)
                $('#table_process').DataTable().destroy();

            for (let i = 0; i < processes.length; i++) {

                let process = processes[i].process_name;
                datas.push([
                    process
                ]);
            }

            table_process = $('#table_process').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                fixedHeader: true,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    {

                    },
                ],
                rowCallback: function (row, data) {

                },
                searching: false,
                ordering: false,
                paging: false,
                info : false
            });
        };

        function GenerateTableSystem(systems) {
            let datas = [];
            if (table_system !== null)
                $('#table_system').DataTable().destroy();

            for (let i = 0; i < systems.length; i++) {

                let system = systems[i].system_name;
                datas.push([
                    system
                ]);
            }

            table_system = $('#table_system').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                fixedHeader: true,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    {

                    },
                ],
                rowCallback: function (row, data) {

                },
                searching: false,
                ordering: false,
                paging: false,
                info : false
            });
        };

        function GenerateStatusOption() {
            let status = $('#status').val();
            $('#status').empty();
            $('#status').append(`<option value="" selected disabled>Please Select Status</option>`);
            for (let i = 0; i < statuses.length; i++) {
                if (statuses[i].status_name === status || status === "" || status === null) {
                    $('#status').append(`<option value="${statuses[i].status_id}">${statuses[i].status_id}: ${statuses[i].status_name}</option>`);
                }
            }
        }
        function GeneratePaymentOption() {
            let payment = $('#select_payment').val();
            $('#select_payment').empty();
            $('#select_payment').append(`<option value="" selected disabled>Please Select Term Payment</option>`);
            for (let i = 0; i < statuses.length; i++) {
                if (statuses[i].status_name === payment || payment === "" || payment === null) {
                    $('#select_payment').append(`<option value="${statuses[i].status_id}">${statuses[i].status_name}</option>`);
                }
            }
        }
        function GenerateMilestoneOption() {
            $('#edit_invoice_milestone').empty();
            $('#edit_invoice_milestone').append(`<option value="" selected disabled>Please Select Milestone</option>`);
            $('#edit_invoice_milestone').append(`<option value="STA000"></option>`);
            for (let i = 0; i < statuses.length; i++) {
                $('#edit_invoice_milestone').append(`<option value="${statuses[i].status_id}">${statuses[i].status_name}</option>`);
            }
        }
        function GenerateStatucInvoiceOption() {
            $('#edit_invoice_status').empty();
            $('#edit_invoice_status').append(`<option value="" selected disabled>Please Select Status</option>`);           
            for (let i = 0; i < status_invoices.length; i++) {
                $('#edit_invoice_status').append(`<option value="${i}">${status_invoices[i]}</option>`);
            }
        }
        function GenerateQuotationOptions() {
            let quots_str = '';
            for (let i = 0; i < quots.length; i++) {
                quots_str += `<option value="${quots[i].quotation_no}">${quots[i].quotation_no} - ${quots[i].customer} - ${quots[i].type}</option>`;
            }
            $('#quotations').empty();
            $('#quotations').append(quots_str);
        }
        $('#select_sale').on('change', function () {
            let user_name = $('#select_sale').val();
            let department = all_users.filter(f => f.user_name === user_name).map(m => m.department)[0];
            $('#sale_department').val(department);
        });

        $('#btn_create').on('click', async function () {
            set_payments = [];
            set_processes = [];
            set_systems = [];
            set_invoice = [];

            GenerateTablePayment(set_payments);
            GenerateTableProcess(set_processes);
            GenerateTableSystem(set_systems);
            GenerateTableInvoice(set_invoice);
            GenerateTableInvoice(set_invoice);

            //await GetQuotations();
            //await GenerateQuotationOptions();
            Prepmodal();
        });

        function Prepmodal() {
            $('#job_id').attr('disabled', false);
            update = false;
            $('#modal_title').text("Create Job");
            $('#job_id').val(null);
            $('#job_name').val(null);
            $('#job_customer').val(null);
            $('#end_user').val(null);
            $('#sale_department').val(null);
            $('#job_date').val(null);
            $('#quotation_no').val(null);
            $('#gp').val(0);
            $('#est_cost').val(0);
            $('#cost').val(0);
            $('#total_cost').val(0);
            $('#remaining_cost').val(0);
            $('#md').val(1);
            $('#pd').val(1);
            $('#status').val(1);
            $('#job_in_hand').val(0);
            $('#job_eng_in_hand').val(0);
            $('#invoice').val(0);
            $('#due_date').val(null);
            $('#bank_guarantee').val(0);
            $('#bg_start').val(null);
            $('#bg_finish').val(null);
            $('#retention').val(0);
            $('#group_finished_date').hide();
            $('#group_warranty_period').hide();
            $('#modal_job').modal();
        };

        $('#table_job tbody').on('click', 'tr', async function () {
            let admin = '@Model.role' == "Admin" ? true : false;
            if (admin) {
                //await GetQuotations();
                //await GenerateQuotationOptions();
                let job_id = table.row(this).data()[0];
                await GetJobFile(job_id);
                await EditJob(table.row(this).data());
            }
        });

        async function GetJobFile(job_id) {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetJobFileByJob", "Job")',
                contentType: 'application/x-www-form-urlencoded',
                data: { job_id },
                success: function (response) {
                    job_files = response;
                }
            });
        }

        function EditJob(data) {
            set_payments = [];
            set_processes = [];
            set_systems = [];
            set_invoice = [];

            update = true;
            $('#modal_job').modal();
            $('#modal_title').text("Edit Job");

            let job_id = data[0];
            let job_name = data[1];

            let quotation_no = data[2];
            let list_process = [];
            let job = jobs.filter(f=>f.job_id == job_id).map(m=>m)[0];
            let customer = job.customer;
            let sale_name = job.sale;
            let sale_department = job.sale_department;
            let end_user = job.enduser;
            let job_date = job.job_date.split('T')[0];
            let job_type = job.job_type;
            let countProcess = (job.process.match(/,/g) || []).length;
            let bank_guarantee = job.bank_guarantee;
            let bg_start = job.bg_start.split('T')[0];
            let bg_finish = job.bg_finish.split('T')[0];
            let retention = job.retention;
            for (let k=0;k<=countProcess;k++){
                let _process = processes.filter(f=>f.process_id == job.process.split(',')[k]).map(m=>m.process_name)[0];
                if (_process !== undefined){
                    list_process.push(_process);
                }
            }

            let list_system = [];
            let countSystem = (job.system.match(/,/g) || []).length;
            for (let k=0;k<=countSystem;k++){
                let _system = systems.filter(f=>f.system_id == job.system.split(',')[k]).map(m=>m.system_name)[0];
                if (_system !== undefined){
                    list_system.push(_system);
                }
            }

            let list_invoice = job.invoices;

            let cost = data[9].replaceAll(",","");
            let md = data[10];
            let pd = data[11];
            let status = data[16];
            let gp = data[18];
            let est_cost = data[19];
            let total_cost = data[20];
            let remaining_cost = data[21];
            let finished_date = jobs.filter(f => f.job_id == job_id).map(m => m.finished_date)[0];           

            $('#job_id').val(job_id);
            $('#job_id').attr('disabled', true);
            $('#job_name').val(job_name);
            $('#job_customer').val(customer);
            $('#select_sale').val(sale_name);
            $('#sale_department').val(sale_department);
            $('#end_user').val(end_user);
            $('#job_date').val(job_date);
            $('#quotation_no').val(quotation_no);
            $('#job_type').val(job_type);
            $('#gp').val(gp);
            $('#est_cost').val(est_cost);
            $('#cost').val(cost);
            $('#total_cost').val(total_cost);
            $('#remaining_cost').val(remaining_cost);
            $('#md').val(md);
            $('#pd').val(pd);
            $('#status').val(status);
            $('#job_in_hand').val(job.job_in_hand);
            $('#job_eng_in_hand').val(job.job_eng_in_hand);
            $('#due_date').val(job.due_date.split('T')[0]);

            $('#finished_date').val(finished_date.split('T')[0]);
            $('#warranty_period').val(job.warranty_period);
            $('#bank_guarantee').val(bank_guarantee);
            $('#bg_start').val(bg_start);
            $('#bg_finish').val(bg_finish);
            $('#retention').val(retention);


            let finish_status = statuses.filter(f=>f.status_id == status).map(m=> m.status_name);
            if (finish_status[0] === "Warranty") {
                $('#group_finished_date').show();
                $('#group_warranty_period').show();
                $('#warranty_period').attr('disabled', false);
            } else {
                if (finish_status[0] === "Finished") {
                    $('#warranty_period').val(0);
                    $('#warranty_period').attr('disabled', true);
                    $('#group_warranty_period').show();
                    $('#group_finished_date').show();
                } else {
                    $('#group_warranty_period').hide();
                    $('#group_finished_date').hide();
                }
                $('#group_warranty_period').hide();
            }

            let datas_percent = [];
            datas_percent.push(job.term_payment.down_payment);
            datas_percent.push(job.term_payment.document_submit);
            datas_percent.push(job.term_payment.instrument_vendor);
            datas_percent.push(job.term_payment.instrument_delivered_ctl);
            datas_percent.push(job.term_payment.system_delivered_ctl);
            datas_percent.push(job.term_payment.fat);
            datas_percent.push(job.term_payment.delivery_instrument);
            datas_percent.push(job.term_payment.delivery_system);
            datas_percent.push(job.term_payment.progress_work);
            datas_percent.push(job.term_payment.installation_work_complete);
            datas_percent.push(job.term_payment.commissioning);
            datas_percent.push(job.term_payment.startup);
            datas_percent.push(job.term_payment.as_built);
            datas_percent.push(job.term_payment.warranty);
            datas_percent.push(job.term_payment.finished);

            for (let i =0;i<statuses.length;i++){
                set_payments.push({'payment_id': statuses[i].status_id ,'payment_name': statuses[i].status_name, 'percent': datas_percent[i]});
            }

            //Term Payment
            let new_payments = [];
            for (let i=0;i<set_payments.length;i++){
                if (set_payments[i].percent > 0){
                    new_payments.push(set_payments[i]);
                }
            }
            set_payments = new_payments;

            //Process
            for (let i=0;i<list_process.length;i++){
                let process_id = processes.filter(f=>f.process_name == list_process[i] ).map(m=>m.process_id)[0];
                set_processes.push({'process_id': process_id ,'process_name': list_process[i]});
            }

            //System
            for (let i=0;i<list_system.length;i++){
                let system_id = systems.filter(f=>f.system_name == list_system[i] ).map(m=>m.system_id)[0];
                set_systems.push({'system_id': system_id ,'system_name': list_system[i]});
            }

            //Invoice
            for (let i=0;i<list_invoice.length;i++){
                let invoice = list_invoice[i].invoice;
                let actual_date = list_invoice[i].actual_date;
                let plan_date = list_invoice[i].plan_date;
                let new_plan_date = list_invoice[i].new_plan_date;
                let status = list_invoice[i].status;
                let remark = list_invoice[i].remark;
                let milestone = list_invoice[i].milestone;
                let id = 0;
                if (milestone !== "") {
                    id = statuses.filter(f => f.status_name === milestone).map(m => m.no)[0];
                }
                set_invoice.push({
                    'no': (i + 1),
                    'id': id,
                    'milestone': milestone,
                    'invoice': invoice,
                    'plan_date': plan_date,
                    'actual_date': actual_date,
                    'new_plan_date': new_plan_date,
                    'status': status,
                    'remark': remark
                });
            }

            set_invoice.sort((a, b) => a.id - b.id || a.no - b.no);

            GenerateStatucInvoiceOption();
            GenerateMilestoneOption();
            GenerateTablePayment(set_payments);
            GenerateTableProcess(set_processes);
            GenerateTableSystem(set_systems);
            GenerateTableInvoice(set_invoice);
            GenerateTableJobFile(job_files);
        }
        $('#quotation_no').on('change',function(){
            let quo = $('#quotation_no').val();
            let customer = quots.filter(f=>f.quotation_no == quo).map(m=>m.customer)[0];
            let type = quots.filter(f=>f.quotation_no == quo).map(m=>m.type)[0];
            $('#job_customer').val(customer);
            $('#job_type').val(type);
        });


        $('#status').on('change',function(){
            let status = $('#status').val();
            let finish_status = statuses.filter(f=>f.status_id === status).map(m=> m.status_name);
            if (finish_status[0] === "Warranty") {
                $('#group_finished_date').show();
                $('#group_warranty_period').show();
                $('#warranty_period').attr('disabled', false);
            }else{
                if (finish_status[0] === "Finished") {
                    $('#warranty_period').val(0);
                    $('#warranty_period').attr('disabled', true);
                    $('#group_warranty_period').show();
                    $('#group_finished_date').show();
                } else {
                    $('#group_warranty_period').hide();
                    $('#group_finished_date').hide();
                }
                $('#group_warranty_period').hide();
            }
        });

        $('#btn_save').on('click', function () {
            let job_id = $('#job_id').val();
            let job_name = $('#job_name').val();
            let customer = $('#job_customer').val();
            let sale = $('#select_sale').val();
            let sale_department = $('#sale_department').val();
            let enduser = $('#end_user').val();
            let job_date = $('#job_date').val();
            let quotation_no = $('#quotation_no').val();
            let job_type = $('#job_type').val();
            let gp = $('#gp').val();
            let est_cost = $('#est_cost').val();
            let cost = $('#cost').val();
            let total_cost = $('#total_cost').val();
            let remaining_cost = $('#remaining_cost').val();
            let md_rate = $('#md_rate').val();
            let pd_rate = $('#pd_rate').val();
            let status = $('#status').val();
            let finished_date = $('#finished_date').val();
            let job_in_hand = $('#job_in_hand').val();
            let job_eng_in_hand = $('#job_eng_in_hand').val();
            let due_date = $('#due_date').val();
            let warranty_period = $('#warranty_period').val();
            let bank_guarantee = $('#bank_guarantee').val();
            let bg_start = $('#bg_start').val();
            let bg_finish = $('#bg_finish').val();
            let retention = $('#retention').val();
            if (status === null) {
                status = 1;
            }
            
            let term_payment = {};
            let down_payment = set_payments.filter(f=>f.payment_id == "STA001").map(m=>m.percent)[0];
            let document_submit = set_payments.filter(f=>f.payment_id == "STA002").map(m=>m.percent)[0];
            let instrument_vendor = set_payments.filter(f=>f.payment_id == "STA003").map(m=>m.percent)[0];
            let instrument_delivered_ctl = set_payments.filter(f=>f.payment_id == "STA004").map(m=>m.percent)[0];
            let system_delivered_ctl = set_payments.filter(f=>f.payment_id == "STA005").map(m=>m.percent)[0];
            let fat = set_payments.filter(f=>f.payment_id == "STA006").map(m=>m.percent)[0];
            let delivery_instrument = set_payments.filter(f=>f.payment_id == "STA007").map(m=>m.percent)[0];
            let delivery_system = set_payments.filter(f=>f.payment_id == "STA008").map(m=>m.percent)[0];
            let progress_work = set_payments.filter(f=>f.payment_id == "STA009").map(m=>m.percent)[0];
            let installation_work_complete = set_payments.filter(f=>f.payment_id == "STA010").map(m=>m.percent)[0];
            let commissioning = set_payments.filter(f=>f.payment_id == "STA011").map(m=>m.percent)[0];
            let startup = set_payments.filter(f=>f.payment_id == "STA012").map(m=>m.percent)[0];
            let as_built = set_payments.filter(f=>f.payment_id == "STA013").map(m=>m.percent)[0];
            let warranty = set_payments.filter(f=>f.payment_id == "STA014").map(m=>m.percent)[0];
            let finished = set_payments.filter(f=>f.payment_id == "STA999").map(m=>m.percent)[0];

            term_payment.job_id = job_id;
            term_payment.down_payment = down_payment;
            term_payment.document_submit = document_submit;
            term_payment.instrument_vendor = instrument_vendor;
            term_payment.instrument_delivered_ctl = instrument_delivered_ctl;
            term_payment.system_delivered_ctl = system_delivered_ctl;
            term_payment.fat = fat;
            term_payment.delivery_instrument = delivery_instrument;
            term_payment.delivery_system = delivery_system;
            term_payment.progress_work = progress_work;
            term_payment.installation_work_complete = installation_work_complete;
            term_payment.commissioning = commissioning;
            term_payment.startup = startup;
            term_payment.as_built = as_built;
            term_payment.warranty = warranty;
            term_payment.finished = finished;

            let invoices = [];
            for (let i = 0; i < set_invoice.length; i++){                
                invoices.push({
                    'job_id': job_id,
                    'invoice': set_invoice[i].invoice,
                    'milestone': set_invoice[i].milestone,
                    'plan_date': set_invoice[i].plan_date,
                    'actual_date': set_invoice[i].actual_date,
                    'new_plan_date': set_invoice[i].new_plan_date,
                    'status': set_invoice[i].status,
                    'remark': set_invoice[i].remark
                });               
            }

            let str_process = "";
            let str_system = "";
            let list_process = Array.from(set_processes).map(m=>m.process_id);
            let list_system = Array.from(set_systems).map(m=>m.system_id);

            for(let k=0 ;k<list_process.length;k++){
                if (k === list_process.length - 1){
                    str_process += list_process[k];
                }else{
                    str_process += list_process[k] + ",";
                }
            }

            for(let k=0 ;k<list_system.length;k++){
                if (k === list_system.length - 1){
                    str_system += list_system[k];
                }else{
                    str_system += list_system[k] + ",";
                }
            }

            let job_string = JSON.stringify({
                "job_id": job_id,
                "job_name": job_name,
                "customer": customer,
                "sale": sale,
                "sale_department": sale_department,
                "enduser": enduser,
                "job_date":job_date,
                "quotation_no": quotation_no,
                "job_type": job_type,
                "gp": gp,
                "est_cost": est_cost,
                "cost": cost,
                "total_cost": total_cost,
                "remaining_cost": remaining_cost,
                "process":str_process,
                "system": str_system,
                "md_rate": md_rate,
                "pd_rate": pd_rate,
                "status": status,
                "term_payment":term_payment,
                "job_in_hand":job_in_hand,
                "job_eng_in_hand":job_eng_in_hand,
                "invoices":invoices,
                "due_date":due_date,
                "finished_date": finished_date,
                "warranty_period": warranty_period,
                "bank_guarantee": bank_guarantee,
                "bg_start": bg_start,
                "bg_finish": bg_finish,
                "retention": retention
            });

            if (debug_job_string) {
                console.log(job_string);
            }

            if (update) {
                UpdateJob(job_string);
            }
            else {
                AddJob(job_string);
            }
        });

        $('#add_payment').on('click',function(){
            let _payment = $('#select_payment').val();
            let payment = statuses.filter(f=>f.status_id === _payment ).map(m=>m.status_name)[0];
            let check_payment = set_payments.find(f=>f.payment_name == payment);
            if (check_payment == undefined){
                set_payments.push({'payment_id': _payment ,'payment_name': payment, 'percent': 0});
                GenerateTablePayment(set_payments);
            }
        });

        $('#add_process').on('click',function(){
            let _process = $('#select_process').val();
            let process = processes.filter(f=>f.process_id === _process ).map(m=>m.process_name)[0];
            let check_process = set_processes.find(f=>f.process_name == process);
            if (check_process == undefined){
                set_processes.push({'process_id': _process ,'process_name': process});
                GenerateTableProcess(set_processes);
            }
        });

        $('#add_system').on('click',function(){
            let _system = $('#select_system').val();
            let system = systems.filter(f=>f.system_id === _system ).map(m=>m.system_name)[0];
            let check_system = set_systems.find(f=>f.system_name == system);
            if (check_system == undefined){
                set_systems.push({'system_id': _system ,'system_name': system});
                GenerateTableSystem(set_systems);
            }
        });

        $('#select_payment').on('change',function(){
            $('#add_payment').attr('disabled',false);
        });

        $('#select_process').on('change',function(){
            $('#add_process').attr('disabled',false);
        });

        $('#select_system').on('change',function(){
            $('#add_system').attr('disabled',false);
        });

        $('#table_payment tbody').on('click', 'tr', async function () {
            let admin = '@Model.role' == "Admin" ? true : false;
            if (admin) {
                let data = table_payment.row(this).data();
                let payment = data[0];
                let percent = data[1];
                $('#edit_payment_name').val(payment);
                $('#edit_percent').val(percent);
                $('#modal_edit_payment').modal();
            }
        });

        $('#table_process tbody').on('click', 'tr', async function () {
            let admin = '@Model.role' == "Admin" ? true : false;
            if (admin) {
                let data = table_process.row(this).data();
                let process = data[0];
                $('#edit_process_name').val(process);
                $('#modal_edit_process').modal();
            }
        });

        $('#table_system tbody').on('click', 'tr', async function () {
            let admin = '@Model.role' == "Admin" ? true : false;
            if (admin) {
                let data = table_system.row(this).data();
                let system = data[0];
                $('#edit_system_name').val(system);
                $('#modal_edit_system').modal();
            }
        });

        $('#btn_payment_save').on('click',function(){
            let payment = $('#edit_payment_name').val();
            let payment_id = set_payments.filter(f=>f.payment_name == payment).map(m=>m.payment_id)[0];
            let percent = $('#edit_percent').val();

            let sum_percent = set_payments.filter(f=>f.payment_id !== payment_id).reduce((total, arg) => Number(total) + Number(arg.percent), 0);
            if (Number(sum_percent) + Number(percent) > 100){
                alert('percent more than 100 %');
            }else{
                let index = set_payments.findIndex(f=>f.payment_id == payment_id);
                set_payments[index].payment_id = payment_id;
                set_payments[index].payment_name = payment;
                set_payments[index].percent = percent;
                GenerateTablePayment(set_payments);
                $('#modal_edit_payment').modal('hide');
            }

        });

        $('#btn_payment_delete').on('click',function(){
            let payment = $('#edit_payment_name').val();
            let payment_id = set_payments.filter(f=>f.payment_name == payment).map(m=>m.payment_id)[0];

            let index = set_payments.findIndex(f=>f.payment_id == payment_id);
            set_payments.splice(index,1);
            GenerateTablePayment(set_payments);
            $('#modal_edit_payment').modal('hide');
        });

        $('#btn_process_delete').on('click',function(){
            let process = $('#edit_process_name').val();
            let process_id = set_processes.filter(f=>f.process_name == process).map(m=>m.process_id)[0];

            let index = set_processes.findIndex(f=>f.process_id == process_id);
            set_processes.splice(index,1);
            GenerateTableProcess(set_processes);
            $('#modal_edit_process').modal('hide');
        });

        $('#btn_system_delete').on('click',function(){
            let system = $('#edit_system_name').val();
            let system_id = set_systems.filter(f=>f.system_name == system).map(m=>m.system_id)[0];

            let index = set_systems.findIndex(f=>f.system_id == system_id);
            set_systems.splice(index,1);
            GenerateTableSystem(set_systems);
            $('#modal_edit_system').modal('hide');
        });

        async function AddJob(job_string) {
            await $.ajax({
                type: "POST",
                url: '@Url.Action("AddJob", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                    job_string
                },
                success: function (response) {
                    if (response === "Success") {
                        location.reload();
                    }
                    else {
                        alert(response);
                    }
                }
            });
        };

        async function UpdateJob(job_string) {
            await $.ajax({
                type: "PATCH",
                url: '@Url.Action("UpdateJob", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                    job_string
                },
                success: function (response) {
                    if (response === "Success") {
                        location.reload();
                    }
                    else {
                        alert(response);
                    }
                }
            });
        }

        $('#add_invoice').on('click',function(){
            var today = new Date();
            var year = today.getFullYear();
            var month = (today.getMonth() + 1).toString().padStart(2,0);
            var day = today.getDate().toString().padStart(2,0);
            let date = year + "-" + month + "-" + day;
            let actual_date = new Date(1900,1,1).toISOString().split('T')[0];
            set_invoice.sort();
            let last_id = 0;
            if (set_invoice.length > 0){
                last_id = set_invoice[set_invoice.length-1].no;
                set_invoice.push({
                    'no': Number(last_id + 1),
                    'id': 0,
                    'milestone': "",
                    'invoice': 0,
                    'plan_date': date,
                    'actual_date': actual_date,
                    'new_plan_date': date,
                    'status': "",
                    'remark': ""
                });
            }else{
                set_invoice.push({
                    'no': 1,
                    'id': 0,
                    'milestone': "",
                    'invoice': 0,
                    'plan_date': date,
                    'actual_date': actual_date,
                    'new_plan_date': date,
                    'status': "",
                    'remark': ""
                });
            }

            GenerateTableInvoice(set_invoice);
        });

        $('#table_invoice tbody').on('click', 'tr', async function () {
            let data = table_invoice.row(this).data();
            let no = data[0];
            let id = data[1];
            let milestone = data[2];
            let invoice = data[3].replaceAll(',','');
            let plan_date = data[4];
            let actual_date = data[5];
            let new_plan_date = data[6];
            let status = data[7];
            let remark = data[8];
            let milestone_id = statuses.filter(f => f.status_name === milestone).map(m => m.status_id);
            $('#edit_invoice_no').val(no);
            $('#edit_invoice_id').val(id);
            $('#edit_invoice_milestone').val(milestone_id);
            $('#edit_invoice').val(invoice);
            $('#edit_invoice_plan_date').val(plan_date);
            $('#edit_invoice_actual_date').val(actual_date);
            $('#edit_invoice_new_plan_date').val(new_plan_date);
            $('#edit_invoice_status').val(status_invoices.findIndex(f=>f === status));
            $('#edit_invoice_remark').val(remark);
            $('#modal_edit_invoice').modal();
        });

        $('#edit_invoice_milestone').on('change', function () {
            let milestone = $('#edit_invoice_milestone').val();
            let data = statuses.filter(f => f.status_id === milestone).map(m => m)[0];
            let id = 0;
            if (typeof(data) !== "undefined") {
                id = data.no;
            }
            $('#edit_invoice_id').val(id);
        });

        $('#btn_invoice_save').on('click',function(){
            let no = $('#edit_invoice_no').val();
            let id = $('#edit_invoice_id').val();
            let invoice = $('#edit_invoice').val();
            let milestone = statuses.filter(f => f.status_id === $('#edit_invoice_milestone').val()).map(m => m.status_name)[0];
            let plan_date = $('#edit_invoice_plan_date').val();
            let actual_date = $('#edit_invoice_actual_date').val();
            let new_plan_date = $('#edit_invoice_new_plan_date').val();
            let status = status_invoices[$('#edit_invoice_status').val()];
            let remark = $('#edit_invoice_remark').val();
            let index = set_invoice.findIndex(f => f.no == no);
            set_invoice[index].id = id;
            set_invoice[index].invoice = invoice;
            set_invoice[index].milestone = milestone;
            set_invoice[index].plan_date = plan_date;
            set_invoice[index].actual_date = actual_date;
            set_invoice[index].new_plan_date = new_plan_date;
            set_invoice[index].status = status;
            set_invoice[index].remark = remark;

            set_invoice.sort((a, b) => a.id - b.id || a.no - b.no);
            GenerateTableInvoice(set_invoice);
            $('#modal_edit_invoice').modal('hide');
        });

        $('#btn_invoice_delete').on('click',function(){
            let no = $('#edit_invoice_no').val();

            let index = set_invoice.findIndex(f=>f.id == no);
            set_invoice.splice(index,1);
            GenerateTableInvoice(set_invoice);
            $('#modal_edit_invoice').modal('hide');
        });

        function GenerateTableInvoice(invoices) {
            $('#invoice').val(0);
            let datas = [];
            if (table_invoice !== null)
                $('#table_invoice').DataTable().destroy();

            for (let i = 0; i < invoices.length; i++) {
                let no = (i+1);
                let id = invoices[i].id;
                let milestone = invoices[i].milestone;
                let invoice = invoices[i].invoice;
                let plan_date = invoices[i].plan_date;
                let actual_date = invoices[i].actual_date;
                let new_plan_date = invoices[i].new_plan_date;
                let status = invoices[i].status;
                let remark = invoices[i].remark;

                set_invoice[i].no = (i + 1);
                datas.push([
                    no,
                    id,
                    milestone,
                    invoice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                    plan_date.split('T')[0],
                    actual_date.toString().split('T')[0],
                    new_plan_date.split('T')[0],
                    status,
                    remark
                ]);
            }

            table_invoice = $('#table_invoice').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                fixedHeader: true,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    {

                    },
                ],
                rowCallback: function (row, data) {
                    let sum_invoice = set_invoice.map(m=>Number(m.invoice)).reduce((acc,curr)=> acc+curr);
                    $('#invoice').val(sum_invoice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","));
                },
                searching: false,
                ordering: false,
                paging: false,
                info : false
            });
        };

        function GenerateTableJobFile(job_files) {
            let _datas = [];
            _datas.push([
                "Quotation", job_files.quotation, ""
            ]);
            _datas.push([
                "PO", job_files.po, ""
            ]);
            _datas.push([
                "Hand Over", job_files.hand_over, ""
            ]);


            if (table_job_file !== undefined) {
                table_job_file.destroy();
            }
            table_job_file = $('#table_job_file').DataTable({
                data: _datas,
                columnDefs: [
                    {
                        targets: 1,
                        className: "dt-left"
                    },
                ],
                rowCallback: function (row, data) {
                    let job_id = $("#job_id").val();
                    let item = data[0];
                    $('td:eq(2)', row).html(`
                        <input type="button" class="btn btn-success" style="width:80px;font-size:12px" onclick="AddJobFile('${job_id}','${item}')" value="อัพเดทไฟล์" />
                    `);
                },
                searching: false,
                paging: false,
                info: false,
                order: false,
            });
        }
        $('#table_job_file tbody').on('click', 'td','tr', async function () {
            let col = table_job_file.cell(this)[0][0].column;
            let path = table_job_file.row(this).data()[1];
            if (col === 1) {
                window.open(path);
            }
        });

        async function AddJobFile(job_id, item) {
            await $.ajax({
                type: "POST",
                url: '@Url.Action("InsertFile", "Job")',
                contentType: 'application/x-www-form-urlencoded',
                data: { job_id, item },
                success: async function (response) {
                    if (response === "Success") {
                        $('#ImportJobFileModal').modal();
                    } else {
                        alert(response);
                    }
                }
            });
        }

        $('#importJobFile').on('change', async function (e) {
            if (e.target.files[0]) {
                let fdata = new FormData();
                let fileUpload = $('#importJobFile').get(0);
                let files = fileUpload.files;
                fdata.append(files[0].name, files[0]);
                $('#importJobFileName').text(files[0].name);

                await $.ajax({
                    type: "POST",
                    url: "Job/ImportJobfile",
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    data: fdata,
                    contentType: false,
                    processData: false,
                    success: async function (response) {
                        if (response.length == 0)
                            alert('Some error occured while uploading');
                        else {
                            alert(response);
                            let job_id = $('#job_id').val();
                            await GetJobFile(job_id);
                            GenerateTableJobFile(job_files);
                            $('#ImportJobFileModal').modal('hide');
                        }
                    },
                });
            }
        });


        $("#job_id").on("input", function (e) {
            $(this).val(function (i, v) {
                return v.replace(/[^a-z0-9-_.]/gi, "");
            });
        });

        $('#btn_cal_gp').on('click', async function () {
            let job = $('#job_id').val();
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetJobsSummaryByJob", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                    job
                },
                success: function (response) {
                    let use_cost = parseFloat(response.cost) - parseFloat(response.remainingCost);
                    let remaining_cost = parseFloat($('#remaining_cost').val());
                    let est_cost = parseFloat($('#est_cost').val());
                    let total_cost = parseFloat($('#total_cost').val());
                    let gp = (((remaining_cost - use_cost - (total_cost - est_cost)) / est_cost) * 100.0).toFixed(1);
                    $('#gp_improve').val(gp);
                }
            });
        });

        $('#btn_export').on('click', function () {
            location.href = '@Url.Action("ExportJob", "Job")';
        });
    </script>
}