@using Microsoft.AspNetCore.Http
@model WebENG.Models.UserModel;
@{
    ViewData["Title"] = "Jobs";
}
<div class="row p-3">
    @if (Model.role == "Admin")
    {
        <div class="col-xl-1 pb-3">
            <button id="btn_create" type="button" class="btn btn-primary form-control elevation-1">
                <i class="fas fa-plus"></i> Create Job
            </button>
        </div>
    }
    <div class="col-xl-1 pb-3">
        <button id="btn_import" type="button" class="btn btn-primary form-control elevation-1" hidden>
            <i class="fas fa-upload"></i> Import
        </button>
    </div>
    <div class="col-xl-1 pb-3">
        <button id="btn_export" type="button" class="btn btn-primary form-control elevation-1" hidden>
            <i class="fas fa-download"></i> Export
        </button>
    </div>
    <div class="col-xl-12">
        <div class="card card-dark">
            <div class="card-header">
                <span class="card-title">Jobs</span>
            </div>
            <div class="card-body">
                <table id="table_job" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Quotation</th>
                            <th>Customer</th>
                            <th>End User</th>
                            <th>Sale Name</th>
                            <th>Department</th>
                            <th>Process</th>
                            <th>System</th>
                            <th>Cost</th>
                            <th>MD</th>
                            <th>PD</th>
                            <th>FT</th>
                            <th>MP</th>
                            <th>Cost/MP</th>
                            <th>OT MP</th>
                            <th>Status</th>
                            <th>C SAT.</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                    <tfoot class="text-center">
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Quotation</th>
                            <th>Customer</th>
                            <th>End User</th>
                            <th>Sale Name</th>
                            <th>Department</th>
                            <th>Process</th>
                            <th>System</th>
                            <th>Cost</th>
                            <th>MD</th>
                            <th>PD</th>
                            <th>FT</th>
                            <th>MP</th>
                            <th>Cost/MP</th>
                            <th>OT MP</th>
                            <th>Status</th>
                            <th>C SAT.</th>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_job" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static" style="overflow-y:auto">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title"><b>Create Job</b></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-4">
                            <label for="job_id">Job Number</label>
                            <input id="job_id" type="text" class="form-control" placeholder="JYYXXXX" />
                        </div>
                        <div class="col-8">
                            <label for="job_name">Job Name</label>
                            <input id="job_name" type="text" class="form-control" placeholder="Job Name" />
                        </div>
                    </div>                   
                    <div class="form-row">
                        <div class="col-3">
                            <label for="quotation_no">Quotation Number</label>
                            <input id="quotation_no" type="text" class="form-control" placeholder="Quotation Number" list="quotations" />
                            <datalist id="quotations"></datalist>
                        </div>
                        <div class="col-3">
                            <label for="cost">Cost</label>
                            <div class="input-group">
                                <input id="cost" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">THB</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-3">
                            <label for="md_rate">Market Develop</label>
                            <div class="input-group">
                                <input id="md_rate" type="number" class="form-control" placeholder="#.#" value="1.0" step="0.1" min="0" max="10" />
                                <div class="input-group-append">
                                    <span class="input-group-text">X</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-3">
                            <div class="form-group ">
                                <label for="pd_rate">Product Develop</label>
                                <div class="input-group">
                                    <input id="pd_rate" type="number" class="form-control" placeholder="#.#" value="1.0" step="0.1" min="0" max="10" />
                                    <div class="input-group-append">
                                        <span class="input-group-text">X</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-6">
                            <div class="card">
                                <div class="card-header" style="background-color:#42D5D8">
                                    <span style="font-weight:bold;">Process</span>
                                </div>
                                <div class="card-body">
                                    <div class="form-row">
                                         <div class="col-9">
                                            <label for="select_process">Process</label>
                                            <select id="select_process" class="form-control">
                                            </select>
                                        </div>
                                        <div class="col-3">
                                            <label for="add_process">Add</label>
                                            <button id="add_process" type="button" class="btn btn-primary form-control elevation-1" disabled>
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-row pt-1">
                                        <div class="col-12">
                                            <table id="table_process" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                                                <thead style="background-color:#42B4D8">
                                                    <tr>
                                                        <th>Process</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>                                           
                                            </table>
                                        </div>
                                    </div> 
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="card">
                                <div class="card-header" style="background-color:#42D5D8">
                                    <span style="font-weight:bold">System</span>
                                </div>
                                <div class="card-body">
                                    <div class="form-row">
                                         <div class="col-9">
                                            <label for="select_system">System</label>
                                            <select id="select_system" class="form-control">
                                            </select>
                                        </div>
                                        <div class="col-3">
                                            <label for="add_system">Add</label>
                                            <button id="add_system" type="button" class="btn btn-primary form-control elevation-1" disabled>
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-row pt-1">
                                        <div class="col-12">
                                            <table id="table_system" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                                                <thead style="background-color:#42B4D8">
                                                    <tr>
                                                        <th>System</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>                                           
                                            </table>
                                        </div>
                                    </div>  
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header" style="background-color:#42D5D8">
                                    <span style="font-weight:bold">Term Payment</span>
                                </div>
                                <div class="card-body">
                                    <div class="form-row">
                                         <div class="col-5">
                                            <label for="select_payment">Term Payment</label>
                                            <select id="select_payment" class="form-control">
                                            </select>
                                        </div>
                                        <div class="col-2 col-md-2">
                                            <label for="add_payment">Add</label>
                                            <button id="add_payment" type="button" class="btn btn-primary form-control elevation-1" disabled>
                                                <i class="fas fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                    <div class="form-row pt-1">
                                        <div class="col-12">
                                            <table id="table_payment" class="table table-sm table-bordered table-hover text-center table-striped nowrap w-100">
                                                <thead style="background-color:#42B4D8">
                                                    <tr>
                                                        <th>Milestone</th>
                                                        <th>%</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                </tbody>                                           
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>                       
                    </div>
                    <div class="form-row">
                        <div class="col-4">
                            <label for="cost">Job In Hand</label>
                            <div class="input-group">
                                <input id="job_in_hand" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">THB</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <label for="cost">Invoice</label>
                            <div class="input-group">
                                <input id="invoice" type="number" class="form-control" placeholder="0" value="0" />
                                <div class="input-group-append">
                                    <span class="input-group-text">THB</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-4">
                            <label for="due_date">Due Date</label>
                            <input id="due_date"type="date"  class="form-control" value="1900-01-01" />
                        </div>
                    </div>
                    <div class="form-row">                       
                        <div class="col-5">
                            <label for="status">Status</label>
                            <select id="status" class="form-control">
                            </select>
                        </div>
                        <div class="col-4" id="group_finished_date">
                            <label for="finished_date">Date Finished</label>
                            <input id="finished_date"type="date"  class="form-control" value="1900-01-01" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="btn_save" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_edit_payment" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title"><b>Edit Term Payment</b></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-8">
                            <label for="edit_payment_name">Term Payment</label>
                            <input id="edit_payment_name" type="text" class="form-control" placeholder="" disabled/>
                        </div>
                        <div class="col-4">
                            <label for="edit_percent">Percent</label>
                            <input id="edit_percent" type="number" class="form-control" placeholder="" />
                        </div>
                    </div>                                       
                </form>
            </div>
            <div class="modal-footer">
                <button id="btn_payment_delete" type="button" class="btn btn-danger mr-auto elevation-1">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="btn_payment_save" type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_edit_process" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title"><b>Edit Process</b></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-12">
                            <label for="edit_process_name">Process</label>
                            <input id="edit_process_name" type="text" class="form-control" placeholder="" disabled/>
                        </div>
                    </div>                                       
                </form>
            </div>
            <div class="modal-footer">
                <button id="btn_process_delete" type="button" class="btn btn-danger mr-auto elevation-1">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal_edit_system" tabindex="-1" role="dialog" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="modal_title" class="modal-title"><b>Edit System</b></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-row">
                        <div class="col-12">
                            <label for="edit_system_name">System</label>
                            <input id="edit_system_name" type="text" class="form-control" placeholder="" disabled/>
                        </div>
                    </div>                                       
                </form>
            </div>
            <div class="modal-footer">
                <button id="btn_system_delete" type="button" class="btn btn-danger mr-auto elevation-1">
                    <i class="fas fa-trash-alt"></i> Delete
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        //Variable Declaration
        let table;
        let table_payment;
        let table_process;
        let table_system;
        let update = false;
        let jobs = [];
        let users = [];
        let quots = [];
        let statuses = [];
        let processes = [];
        let systems = [];

        let set_payments = [];
        let set_processes = [];
        let set_systems = [];
        //Change these parameters to true to show result
        let debug_jobs = false;
        let debug_user = false;
        let debug_job_string = false;
        let debug_quots = false;

        $(document).ready(async function () {
            await GetStatus();
            await GenerateStatusOption();
            await GeneratePaymentOption();
            await GetProcess();
            await GetSystem();
            await GenerateProcessOption();
            await GenerateSystemOption();
            GetJobs();
        });

        async function GetJobs() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetJobs", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    jobs = response;
                    if (debug_jobs) {
                        console.log(jobs);
                    }
                    GenerateTable(jobs);
                }
            });
        };

        async function GetUsers() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetUsers", "EngUser")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    users = response;
                    if (debug_user) {
                        console.log(users);
                    }
                }
            });
        }

        async function GetQuotations() {
            let today = new Date();
            let year = today.getFullYear().toString().substring(2, 4);
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetQuotations", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { year },
                success: function (response) {
                    quots = response;
                    if (debug_quots) {
                        console.log(quots);
                    }
                }
            });
        }

        async function GetProcess() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetProcesses", "EngProcess")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    processes = response;                   
                }
            });
        }
        async function GetSystem() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetSystems", "EngSystem")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    systems = response;               
                }
            });
        }

        function GenerateProcessOption() {
            let process = $('#select_process').val();
            $('#select_process').empty();
            $('#select_process').append(`<option value="" selected disabled>Please Select Process</option>`);
            for (let i = 0; i < processes.length; i++) {
                if (processes[i].process_name === process || process === "" || process === null) {
                    $('#select_process').append(`<option value="${processes[i].process_id}">${processes[i].process_id}: ${processes[i].process_name}</option>`);
                }
            }
        }

        function GenerateSystemOption() {
            let system = $('#select_system').val();
            $('#select_system').empty();
            $('#select_system').append(`<option value="" selected disabled>Please Select System</option>`);
            for (let i = 0; i < systems.length; i++) {
                if (systems[i].system_name === system || system === "" || system === null) {
                    $('#select_system').append(`<option value="${systems[i].system_id}">${systems[i].system_id}: ${systems[i].system_name}</option>`);
                }
            }
        }

        async function GetStatus() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetStatus", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {  },
                success: function (response) {
                    statuses = response;
                }
            });
        };
        function GenerateTable(jobs) {
            let datas = [];
            if (table !== null)
                $('#table_job').DataTable().destroy();

            for (let i = 0; i < jobs.length; i++) {
                
                let countProcess = (jobs[i].process.match(/,/g) || []).length;
                let countSystem = (jobs[i].system.match(/,/g) || []).length;
             
                let process = "";
                let system = "";

                for (let k=0;k<=countProcess;k++ ){
                    if (k < countProcess){
                        process += processes.filter(f=> f.process_id === jobs[i].process.split(',')[k]).map(m=> m.process_name) + ",";
                    }else{
                        process += processes.filter(f=> f.process_id === jobs[i].process.split(',')[k]).map(m=> m.process_name);
                    }
                }

                for (let k=0;k<=countSystem;k++ ){
                    if (k < countSystem){
                        system += systems.filter(f=> f.system_id === jobs[i].system.split(',')[k]).map(m=> m.system_name) + ",";
                    }else{
                        system += systems.filter(f=> f.system_id === jobs[i].system.split(',')[k]).map(m=> m.system_name);
                    }
                }
                datas.push([
                    jobs[i].job_id,
                    jobs[i].job_name,
                    jobs[i].quotation_no,
                    jobs[i].customer,
                    jobs[i].enduser,
                    jobs[i].sale_name,
                    jobs[i].department,
                    process,
                    system,
                    jobs[i].cost.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                    jobs[i].md_rate,
                    jobs[i].pd_rate,
                    jobs[i].md_rate * jobs[i].pd_rate, //Factor
                    jobs[i].manpower,
                    jobs[i].cost_per_manpower,
                    jobs[i].ot_manpower,
                    jobs[i].status,
                    "" //Customer Satisfaction
                ]);
            }

            table = $('#table_job').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                fixedHeader: true,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    {
                        targets: [4, 5, 6, 10, 11, 13, 14, 15],
                        visible: false
                    },
                ],
                rowCallback: function (row, data) {
                    $('td:eq(1)', row).addClass("text-left");
                    $('td:eq(3)', row).addClass("text-left");
                    let code_status = data[16];
                    let status = statuses.filter(f=>f.status_id === code_status).map(m=>m.status_name);
                    let status_str =  '';
                    if (code_status === "STA999"){
                        status_str = `<span class="badge badge-success">${status}</span>`;
                    }else{
                        status_str = `<span class="badge badge-warning">${status}</span>`;
                    }
                                       
                    $('td:eq(8)', row).html(status_str);
                }
            });
        };

        function GenerateTablePayment(payments) {
            let datas = [];
            if (table_payment !== null)
                $('#table_payment').DataTable().destroy();

            for (let i = 0; i < payments.length; i++) {
                
                let payment = payments[i].payment_name;
                let percent = payments[i].percent;
             
                datas.push([
                    payment,
                    percent
                ]);
            }

            table_payment = $('#table_payment').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                fixedHeader: true,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    {
                        
                    },
                ],
                rowCallback: function (row, data) {
                    
                },
                searching: false,
                ordering: false,
                paging: false,
                info : false
            });
        };

        function GenerateTableProcess(processes) {
            let datas = [];
            if (table_process !== null)
                $('#table_process').DataTable().destroy();

            for (let i = 0; i < processes.length; i++) {
                
                let process = processes[i].process_name;            
                datas.push([
                    process
                ]);
            }

            table_process = $('#table_process').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                fixedHeader: true,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    {
                        
                    },
                ],
                rowCallback: function (row, data) {
                    
                },
                searching: false,
                ordering: false,
                paging: false,
                info : false
            });
        };


        function GenerateTableSystem(systems) {
            let datas = [];
            if (table_system !== null)
                $('#table_system').DataTable().destroy();

            for (let i = 0; i < systems.length; i++) {
                
                let system = systems[i].system_name;            
                datas.push([
                    system
                ]);
            }

            table_system = $('#table_system').DataTable({
                data: datas,
                lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "All"]],
                fixedHeader: true,
                fixedColumns: {
                    left: 2
                },
                columnDefs: [
                    {
                        
                    },
                ],
                rowCallback: function (row, data) {
                    
                },
                searching: false,
                ordering: false,
                paging: false,
                info : false
            });
        };

        function GenerateStatusOption() {
            let status = $('#status').val();
            $('#status').empty();
            $('#status').append(`<option value="" selected disabled>Please Select Status</option>`);
            for (let i = 0; i < statuses.length; i++) {
                if (statuses[i].status_name === status || status === "" || status === null) {
                    $('#status').append(`<option value="${statuses[i].status_id}">${statuses[i].status_id}: ${statuses[i].status_name}</option>`);
                }
            }
        }
        function GeneratePaymentOption() {
            let payment = $('#select_payment').val();
            $('#select_payment').empty();
            $('#select_payment').append(`<option value="" selected disabled>Please Select Term Payment</option>`);
            for (let i = 0; i < statuses.length; i++) {
                if (statuses[i].status_name === status || status === "" || status === null) {
                    if (statuses[i].status_id !== "STA999"){
                        $('#select_payment').append(`<option value="${statuses[i].status_id}">${statuses[i].status_name}</option>`);
                    }
                }
            }
        }
        function GenerateQuotationOptions() {
            let quots_str = '';
            for (let i = 0; i < quots.length; i++) {
                quots_str += `<option value="${quots[i].quotation_no}">${quots[i].quotation_no} - ${quots[i].customer}</option>`;
            }
            $('#quotations').empty();
            $('#quotations').append(quots_str);
        }

        $('#btn_create').on('click', async function () {   
            await GetQuotations();
            await GenerateQuotationOptions();  
            Prepmodal();
        });

        function Prepmodal() {
            $('#job_id').attr('disabled', false);
            update = false;
            $('#modal_job').modal();
            $('#modal_title').text("Create Job");
            $('#job_id').val(null);
            $('#job_name').val(null);
            $('#quotation_no').val(null);
            $('#cost').val(0);
            $('#md').val(1);
            $('#pd').val(1);
            $('#status').val(1);

            $('#group_finished_date').hide();
        };

        $('#table_job tbody').on('click', 'tr', async function () {
            let admin = '@Model.role' == "Admin" ? true : false;
            if (admin) {
                await GetQuotations();
                await GenerateQuotationOptions();
                await EditJob(table.row(this).data());
            }
        });

        function EditJob(data) {
            set_payments = [];
            set_processes = [];
            set_systems = [];

            update = true;
            $('#modal_job').modal();
            $('#modal_title').text("Edit Job");

            let job_id = data[0];
            let job_name = data[1];
            let quotation_no = data[2];
            let list_process = [];
            let job = jobs.filter(f=>f.job_id == job_id).map(m=>m)[0];
            let countProcess = (job.process.match(/,/g) || []).length;

            for (let k=0;k<=countProcess;k++){
                let _process = processes.filter(f=>f.process_id == job.process.split(',')[k]).map(m=>m.process_name)[0];
                if (_process !== undefined){
                    list_process.push(_process);
                }
            }

            let list_system = [];
            let countSystem = (job.system.match(/,/g) || []).length;
            for (let k=0;k<=countSystem;k++){
                let _system = systems.filter(f=>f.system_id == job.system.split(',')[k]).map(m=>m.system_name)[0];
                if (_system !== undefined){
                    list_system.push(_system);
                }
            }

            let cost = data[9].replaceAll(",","");
            let md = data[10];
            let pd = data[11];
            let status = data[16];
            let finished_date = jobs.filter(f=>f.job_id == job_id).map(m=>m.finished_date)[0];

            $('#job_id').val(job_id);
            $('#job_id').attr('disabled', true);
            $('#job_name').val(job_name);
            $('#quotation_no').val(quotation_no);
            $('#cost').val(cost);
            $('#md').val(md);
            $('#pd').val(pd);
            $('#status').val(status);
            $('#job_in_hand').val(job.job_in_hand);
            $('#invoice').val(job.invoice);
            $('#due_date').val(job.due_date.split('T')[0]);

            $('#finished_date').val(finished_date.split('T')[0]);

            let finish_status = statuses.filter(f=>f.status_id == status).map(m=> m.status_name);
            if (finish_status[0] === "Finished"){
                $('#group_finished_date').show();
            }else{
                $('#group_finished_date').hide();
            }

            set_payments.push({'payment_id': 'STA001' ,'payment_name': 'Down Payment/KOM', 'percent': job.down_payment});
            set_payments.push({'payment_id': 'STA002' ,'payment_name': 'Document Submit', 'percent': job.document_submit});
            set_payments.push({'payment_id': 'STA003' ,'payment_name': 'Instrument Delivered @@ CTL', 'percent': job.instrument_delivered_ctl});
            set_payments.push({'payment_id': 'STA004' ,'payment_name': 'System Delivered @@ CTL', 'percent': job.system_delivered_ctl});
            set_payments.push({'payment_id': 'STA005' ,'payment_name': 'FAT', 'percent': job.fat});
            set_payments.push({'payment_id': 'STA006' ,'payment_name': 'Delivery Instrument', 'percent': job.delivery_instrument});
            set_payments.push({'payment_id': 'STA007' ,'payment_name': 'Delivery System', 'percent': job.delivery_system});
            set_payments.push({'payment_id': 'STA008' ,'payment_name': 'Progress Work', 'percent': job.progress_work});
            set_payments.push({'payment_id': 'STA009' ,'payment_name': 'Commissioning', 'percent': job.commissioning});
            set_payments.push({'payment_id': 'STA010' ,'payment_name': 'As-Built', 'percent': job.as_built});

            //Term Payment
            let new_payments = [];
            for (let i=0;i<set_payments.length;i++){
                if (set_payments[i].percent > 0){
                    new_payments.push(set_payments[i]);
                }
            }
            set_payments = new_payments;
            
            //Process
            for (let i=0;i<list_process.length;i++){      
                let process_id = processes.filter(f=>f.process_name == list_process[i] ).map(m=>m.process_id)[0];         
                set_processes.push({'process_id': process_id ,'process_name': list_process[i]});               
            }
            
            //System
            for (let i=0;i<list_system.length;i++){      
                let system_id = systems.filter(f=>f.system_name == list_system[i] ).map(m=>m.system_id)[0];
                set_systems.push({'system_id': system_id ,'system_name': list_system[i]});               
            }

            GenerateTablePayment(set_payments);
            GenerateTableProcess(set_processes);
            GenerateTableSystem(set_systems);
        }

        $('#status').on('change',function(){
            let status = $('#status').val();
            let finish_status = statuses.filter(f=>f.status_id === status).map(m=> m.status_name);
            if (finish_status[0] === "Finished"){
                $('#group_finished_date').show();
            }else{
                $('#group_finished_date').hide();
            }
        });

        $('#btn_save').on('click', function () {
            let job_id = $('#job_id').val();
            let job_name = $('#job_name').val();
            let quotation_no = $('#quotation_no').val();
            let cost = $('#cost').val();
            let md_rate = $('#md_rate').val();
            let pd_rate = $('#pd_rate').val();
            let status = $('#status').val();
            let finished_date = $('#finished_date').val();
            let job_in_hand = $('#job_in_hand').val();
            let invoice = $('#invoice').val();
            let due_date = $('#due_date').val();
            if (status === null) {
                status = 1;
            }

            let down_payment = set_payments.filter(f=>f.payment_id == "STA001").map(m=>m.percent)[0];
            let document_submit = set_payments.filter(f=>f.payment_id == "STA002").map(m=>m.percent)[0];
            let instrument_delivered_ctl = set_payments.filter(f=>f.payment_id == "STA003").map(m=>m.percent)[0];
            let system_delivered_ctl = set_payments.filter(f=>f.payment_id == "STA004").map(m=>m.percent)[0];
            let fat = set_payments.filter(f=>f.payment_id == "STA005").map(m=>m.percent)[0];
            let delivery_instrument = set_payments.filter(f=>f.payment_id == "STA006").map(m=>m.percent)[0];
            let delivery_system = set_payments.filter(f=>f.payment_id == "STA007").map(m=>m.percent)[0];
            let progress_work = set_payments.filter(f=>f.payment_id == "STA008").map(m=>m.percent)[0];
            let commissioning = set_payments.filter(f=>f.payment_id == "STA009").map(m=>m.percent)[0];
            let as_built = set_payments.filter(f=>f.payment_id == "STA010").map(m=>m.percent)[0];

            let str_process = "";
            let str_system = "";
            let list_process = Array.from(set_processes).map(m=>m.process_id);
            let list_system = Array.from(set_systems).map(m=>m.system_id);

            for(let k=0 ;k<list_process.length;k++){
                if (k === list_process.length - 1){
                    str_process += list_process[k];
                }else{
                    str_process += list_process[k] + ",";
                }               
            }

            for(let k=0 ;k<list_system.length;k++){
                if (k === list_system.length - 1){
                    str_system += list_system[k];
                }else{
                    str_system += list_system[k] + ",";
                }               
            }

            let job_string = JSON.stringify({
                "job_id": job_id,
                "job_name": job_name,
                "quotation_no": quotation_no,
                "cost": cost,
                "process":str_process,
                "system": str_system,
                "md_rate": md_rate,
                "pd_rate": pd_rate,
                "status": status,
                "down_payment":down_payment,
                "document_submit":document_submit,
                "instrument_delivered_ctl":instrument_delivered_ctl,
                "system_delivered_ctl":system_delivered_ctl,
                "fat":fat,
                "delivery_instrument":delivery_instrument,
                "delivery_system":delivery_system,
                "progress_work":progress_work,
                "commissioning":commissioning,
                "as_built":as_built,
                "job_in_hand":job_in_hand,
                "invoice":invoice,
                "due_date":due_date,
                "finished_date": finished_date
            });

            if (debug_job_string) {
                console.log(job_string);
            }

            if (update) {
                UpdateJob(job_string);
            }
            else {
                AddJob(job_string);
            }

        });

        $('#add_payment').on('click',function(){
            let _payment = $('#select_payment').val();       
            let payment = statuses.filter(f=>f.status_id === _payment ).map(m=>m.status_name)[0];
            let check_payment = set_payments.find(f=>f.payment_name == payment);
            if (check_payment == undefined){
                set_payments.push({'payment_id': _payment ,'payment_name': payment, 'percent': 0});
                GenerateTablePayment(set_payments);
            }
        });

        $('#add_process').on('click',function(){
            let _process = $('#select_process').val();       
            let process = processes.filter(f=>f.process_id === _process ).map(m=>m.process_name)[0];
            let check_process = set_processes.find(f=>f.process_name == process);
            if (check_process == undefined){
                set_processes.push({'process_id': _process ,'process_name': process});
                GenerateTableProcess(set_processes);
            }
        });

        $('#add_system').on('click',function(){
            let _system = $('#select_system').val();       
            let system = systems.filter(f=>f.system_id === _system ).map(m=>m.system_name)[0];
            let check_system = set_systems.find(f=>f.system_name == system);
            if (check_system == undefined){
                set_systems.push({'system_id': _system ,'system_name': system});
                GenerateTableSystem(set_systems);
            }
        });

        $('#select_payment').on('change',function(){
            $('#add_payment').attr('disabled',false);
        });

        $('#select_process').on('change',function(){
            $('#add_process').attr('disabled',false);
        });

        $('#select_system').on('change',function(){
            $('#add_system').attr('disabled',false);
        });

        $('#table_payment tbody').on('click', 'tr', async function () {
            let admin = '@Model.role' == "Admin" ? true : false;
            if (admin) {
                let data = table_payment.row(this).data();
                let payment = data[0];
                let percent = data[1];
                $('#edit_payment_name').val(payment);
                $('#edit_percent').val(percent);
                $('#modal_edit_payment').modal();
            }
        });

        $('#table_process tbody').on('click', 'tr', async function () {
            let admin = '@Model.role' == "Admin" ? true : false;
            if (admin) {
                let data = table_process.row(this).data();
                let process = data[0];
                $('#edit_process_name').val(process);
                $('#modal_edit_process').modal();
            }
        });

        $('#table_system tbody').on('click', 'tr', async function () {
            let admin = '@Model.role' == "Admin" ? true : false;
            if (admin) {
                let data = table_system.row(this).data();
                let system = data[0];
                $('#edit_system_name').val(system);
                $('#modal_edit_system').modal();
            }
        });

        $('#btn_payment_save').on('click',function(){
            let payment = $('#edit_payment_name').val();
            let payment_id = set_payments.filter(f=>f.payment_name == payment).map(m=>m.payment_id)[0];
            let percent = $('#edit_percent').val();

            let sum_percent = set_payments.filter(f=>f.payment_id !== payment_id).reduce((total, arg) => Number(total) + Number(arg.percent), 0);
            if (Number(sum_percent) + Number(percent) > 100){
                alert('percent more than 100 %');
            }else{
                let index = set_payments.findIndex(f=>f.payment_id == payment_id);
                set_payments[index].payment_id = payment_id;
                set_payments[index].payment_name = payment;
                set_payments[index].percent = percent;
                GenerateTablePayment(set_payments);
                $('#modal_edit_payment').modal('hide');
            }

        });

        $('#btn_payment_delete').on('click',function(){
            let payment = $('#edit_payment_name').val();
            let payment_id = set_payments.filter(f=>f.payment_name == payment).map(m=>m.payment_id)[0];

            let index = set_payments.findIndex(f=>f.payment_id == payment_id);
            set_payments.splice(index,1);
            GenerateTablePayment(set_payments);
            $('#modal_edit_payment').modal('hide');
        });

        $('#btn_process_delete').on('click',function(){
            let process = $('#edit_process_name').val();
            let process_id = set_processes.filter(f=>f.process_name == process).map(m=>m.process_id)[0];

            let index = set_processes.findIndex(f=>f.process_id == process_id);
            set_processes.splice(index,1);
            GenerateTableProcess(set_processes);
            $('#modal_edit_process').modal('hide');
        });

        $('#btn_system_delete').on('click',function(){
            let system = $('#edit_system_name').val();
            let system_id = set_systems.filter(f=>f.system_name == system).map(m=>m.system_id)[0];

            let index = set_systems.findIndex(f=>f.system_id == system_id);
            set_systems.splice(index,1);
            GenerateTableSystem(set_systems);
            $('#modal_edit_system').modal('hide');
        });

        async function AddJob(job_string) {
            await $.ajax({
                type: "POST",
                url: '@Url.Action("AddJob", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                    job_string
                },
                success: function (response) {
                    if (response === "Success") {
                        location.reload();
                    }
                    else {
                        alert(response);
                    }
                }
            });
        };

        async function UpdateJob(job_string) {
            await $.ajax({
                type: "PATCH",
                url: '@Url.Action("UpdateJob", "Job")',
	            contentType: 'application/x-www-form-urlencoded',
                data: {
                    job_string
                },
                success: function (response) {
                    if (response === "Success") {
                        location.reload();
                    }
                    else {
                        alert(response);
                    }
                }
            });
        }
    </script>
}