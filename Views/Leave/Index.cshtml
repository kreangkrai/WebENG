@using Microsoft.AspNetCore.Http
@model WebENG.Models.UserModel;
@{
    ViewData["Title"] = "Leave";
}

<link href="https://fonts.googleapis.com/css2?family=Kanit:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet">

<style>
    .kanit-thin {
        font-family: "Kanit", sans-serif;
        font-weight: 100;
        font-style: normal;
    }

    .kanit-extralight {
        font-family: "Kanit", sans-serif;
        font-weight: 200;
        font-style: normal;
    }

    .kanit-light {
        font-family: "Kanit", sans-serif;
        font-weight: 300;
        font-style: normal;
    }

    .kanit-regular {
        font-family: "Kanit", sans-serif;
        font-weight: 400;
        font-style: normal;
    }

    .kanit-medium {
        font-family: "Kanit", sans-serif;
        font-weight: 500;
        font-style: normal;
    }

    .kanit-semibold {
        font-family: "Kanit", sans-serif;
        font-weight: 600;
        font-style: normal;
    }

    .kanit-bold {
        font-family: "Kanit", sans-serif;
        font-weight: 700;
        font-style: normal;
    }

    .kanit-extrabold {
        font-family: "Kanit", sans-serif;
        font-weight: 800;
        font-style: normal;
    }

    .kanit-black {
        font-family: "Kanit", sans-serif;
        font-weight: 900;
        font-style: normal;
    }

    .kanit-thin-italic {
        font-family: "Kanit", sans-serif;
        font-weight: 100;
        font-style: italic;
    }

    .kanit-extralight-italic {
        font-family: "Kanit", sans-serif;
        font-weight: 200;
        font-style: italic;
    }

    .kanit-light-italic {
        font-family: "Kanit", sans-serif;
        font-weight: 300;
        font-style: italic;
    }

    .kanit-regular-italic {
        font-family: "Kanit", sans-serif;
        font-weight: 400;
        font-style: italic;
    }

    .kanit-medium-italic {
        font-family: "Kanit", sans-serif;
        font-weight: 500;
        font-style: italic;
    }

    .kanit-semibold-italic {
        font-family: "Kanit", sans-serif;
        font-weight: 600;
        font-style: italic;
    }

    .kanit-bold-italic {
        font-family: "Kanit", sans-serif;
        font-weight: 700;
        font-style: italic;
    }

    .kanit-extrabold-italic {
        font-family: "Kanit", sans-serif;
        font-weight: 800;
        font-style: italic;
    }

    .kanit-black-italic {
        font-family: "Kanit", sans-serif;
        font-weight: 900;
        font-style: italic;
    }
    /* สไตล์สำหรับ input */
    input[type="text"] {
        transition: opacity 0.3s ease, background-color 0.3s ease; /* แอนิเมชันนุ่มนวล */
    }
        /* input ตอน disable */
        input[type="text"]:disabled {
            cursor: not-allowed;
        }
        /* input ตอน enable */
        input[type="text"]:not(:disabled) {
            opacity: 1;
        }
    /* สไตล์สำหรับ input */
    input[type="number"] {
        transition: opacity 0.3s ease, background-color 0.3s ease; /* แอนิเมชันนุ่มนวล */
    }
        /* input ตอน disable */
        input[type="number"]:disabled {
            cursor: not-allowed;
        }
        /* input ตอน enable */
        input[type="number"]:not(:disabled) {
            opacity: 1;
        }

    /* สไตล์สำหรับส่วนอัปโหลดไฟล์ */
    #uploadForm {
        transition: all 0.3s ease;
    }

        #uploadForm:hover {
            background: #e9ecef;
            border-color: #007bff;
        }

        #uploadForm.dragover {
            background: #e3f2fd;
            border-color: #007bff;
            transform: scale(1.02);
        }

    /* สไตล์สำหรับรายการไฟล์ */
    .file-item {
        padding: 10px 15px;
        border-bottom: 1px solid #e9ecef;
    }

        .file-item:last-child {
            border-bottom: none;
        }

        .file-item:hover {
            background: #f8f9fa;
        }

    .file-link {
        color: #007bff;
        text-decoration: none;
        transition: color 0.3s ease;
    }

        .file-link:hover {
            color: #0056b3;
            text-decoration: underline;
        }

    .delete-btn {
        transition: all 0.3s ease;
    }

        .delete-btn:hover {
            background: #dc3545;
            color: white;
            transform: translateY(-2px);
        }

     /* สไตล์สำหรับ dropzone */
    .dropzone {
        position: relative;
        transition: all 0.3s ease;
        cursor: pointer;
    }
    .dropzone:hover {
        background: #e9ecef;
        border-color: #007bff;
    }
    .dropzone.dragover {
        background: #e3f2fd;
        border-color: #007bff;
        transform: scale(1.02);
    }
    .dropzone * {
        pointer-events: none; /* ป้องกันการรบกวนจาก element ลูก */
    }
    .dropzone input[type="file"] {
        pointer-events: auto; /* อนุญาตให้ input รับ event */
    }

    /* สไตล์สำหรับรายการไฟล์ */
    .file-item {
        padding: 10px 15px;
        border-bottom: 1px solid #e9ecef;
    }
    .file-item:last-child {
        border-bottom: none;
    }
    .file-item:hover {
        background: #f8f9fa;
    }
    .file-link {
        color: #007bff;
        text-decoration: none;
        transition: color 0.3s ease;
    }
    .file-link:hover {
        color: #0056b3;
        text-decoration: underline;
    }
    .delete-btn {
        transition: all 0.3s ease;
    }
    .delete-btn:hover {
        background: #dc3545;
        color: white;
        transform: translateY(-2px);
    }

</style>

<div class="row p-3">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <div id="calendar"></div>
            </div>
        </div>
    </div>
</div>

<!-- Task Modal -->
<div class="modal fade" id="modal_leave" tabindex="-1" role="dialog" aria-hidden="true" style="overflow-y:hidden">
    <div class="modal modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content kanit-regular">
            <div class="modal-header" style="background: linear-gradient(90deg, rgba(33, 120, 190, 1) 0%, rgba(40, 71, 95, 1) 100%); color: white; border-bottom: none">
                <h5 class="modal-title" id="modal_leave_title">ยื่นการลา</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" style="color: white;">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="overflow-y:auto;height:600px; color:#555555">
                <form>
                    <div class="form-group row">
                        <div class="col-xl-6 col-md-6 col-sm-12 ">
                            <label for="request_id">ประเภทการลา</label>
                            <select id="" class="form-control">
                                <option value="">ลาพักร้อน (5)</option>
                                <option value="">ลาป่วย (30)</option>
                            </select>
                        </div>
                        <div class="col-xl-6 col-md-6 col-sm-12">
                            <label for="working_date">ช่วงเวลา</label>
                            <div class="row">
                                <div class="btn-group" role="group" aria-label="Basic example">
                                    <button id="leave_full" type="button" class="btn btn-outline-primary">ทั้งวัน</button>
                                    <button id="leave_half" type="button" class="btn btn-outline-info">ครึ่งวัน</button>
                                    <button id="leave_hours" type="button" class="btn btn-outline-secondary">รายชั่วโมง</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    @* <div id="date_group" class="form-group row">
                        <div class="col-xl-4 col-md-4 col-sm-6">
                            <label for="start_date">ลาตั้งแต่วันที่</label>
                            <input id="start_date" type="date" class="form-control" />
                        </div>
                        <div class="col-xl-2 col-md-2 col-sm-6">
                            <label for="stop_date">จำนวน</label>
                            <input id="stop_date" type="number" class="form-control" value="1" />
                        </div>
                        <div class="col-xl-3 col-md-3 col-sm-6">
                            <label for="start_time">เวลาเริ่มต้น</label>
                            <input id="start_time" type="time" class="form-control" />
                        </div>
                        <div class="col-xl-3 col-md-3 col-sm-6">
                            <label for="stop_time">เวลาสิ้นสุด</label>
                            <input id="stop_time" type="time" class="form-control" />
                        </div>
                    </div> *@
                    <div id="date_group" class="form-group row">
                        <div class="col-xl-4 col-md-4 col-sm-12">
                            <label for="amount_leave">ลาจำนวน</label>
                            <div class="input-group">
                                <input id="amount_leave" type="number" class="form-control" style="text-align:end" value="1" />
                                <div class="input-group-append">
                                    <span class="input-group-text">วัน</span>
                                </div>
                            </div>
                        </div>
                        <div class="col-xl-4 col-md-6 col-sm-6">
                            <label for="start_date">ลาตั้งแต่วันที่</label>
                            <input id="start_date" type="date" class="form-control" />
                        </div>
                        <fieldset disabled class="col-xl-4 col-md-6 col-sm-6">
                            <label for="start_date">ถึงวันที่</label>
                            <input id="stop_date" type="text" class="form-control" />
                        </fieldset>
                    </div>
                    <div id="time_group" class="form-group row">
                        <div class="col-xl-4 col-md-4 col-sm-12">
                            <label for="stop_date">ระยะเวลา</label>
                            <div class="input-group">
                                <select id="" class="form-control">
                                    <option value="">Select...</option>
                                    <option value="">2 ชั่วโมง</option>
                                    <option value="">4 ชั่วโมง</option>
                                    <option value="">6 ชั่วโมง</option>
                                </select>
                            </div>
                        </div>
                        <div class="col-xl-4 col-md-4 col-sm-6">
                            <label for="start_time">ตั้งแต่เวลา</label>
                            <input id="start_time" type="time" class="form-control" />
                        </div>
                        <fieldset disabled class="col-xl-4 col-md-4 col-sm-6">
                            <label for="stop_time">ถึงเวลา</label>
                            <input id="stop_time" type="time" class="form-control" />
                        </fieldset>
                    </div>
                    <hr />
                    <div id="date_group" class="form-group row">
                        <div class="col-12">
                            <label for="start_date">แนบไฟล์</label>
                            <div id="uploadForm" enctype="multipart/form-data">
                                <div id="fileInputs">
                                    <div class="file-input">
                                        <div class="row">
                                            <div class="col-9">
                                                <input type="file" name="files" accept=".pdf,.jpg,.png,.xls,.xlsx" />
                                            </div>

                                            <div class="col-3">
                                                <button type="button" id="addFileInput" class="btn btn-success" style="border-radius:20px">เพิ่มไฟล์ +</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div id="date_group" class="form-group row">
                        <div class="col-12">
                            <label for="start_date">เอกสาร</label>
                            <div class="row" style="border-radius:20px; border:thin; border-color:lightgrey; padding:10px;">
                                <div class="list-group" id="fileList">
                                    <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                        <a href="#" class="col-xl-12 col-md-12 col-sm-12 file-link">File_001.png</a>
                                        <button class="btn btn-danger btn-sm delete-btn" style="border-radius:20px" data-file="File_001.png">ลบไฟล์</button>
                                    </div>
                                    <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                        <a href="#" class="file-link">File_002.pdf</a>
                                        <button class="btn btn-danger btn-sm delete-btn" style="border-radius:20px" data-file="File_002.pdf">ลบไฟล์</button>
                                    </div>
                                </div>
                                @* <div class="col-6">
                                    <ul>
                                        <li>AAAAAAAA</li>
                                    </ul>
                                </div>
                                <div class="col-6">
                                    <button type="button" id="addFileInput" class="btn btn-danger" style="border-radius:20px">ลบไฟล์</button>
                                </div>
                                <div class="col-6">
                                    <ul>
                                        <li>BBBBB</li>
                                    </ul>
                                </div>
                                <div class="col-6">
                                    <button type="button" id="addFileInput" class="btn btn-danger">ลบ</button>
                                </div> *@
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="form-group row">
                        <div class="col-12">
                            <div class="form-group">
                                <label for="note">รายละเอียด</label>
                                <textarea id="note" class="form-control" rows="2" placeholder="Note or Description"></textarea>
                            </div>
                        </div>
                    </div>

                    <hr />

                    <!-- ส่วนอัปโหลดไฟล์ -->
                    <div id="date_group" class="form-group row">
                        <div class="col-12">
                            <label for="uploadForm" class="kanit-medium">แนบไฟล์</label>
                            <div id="uploadForm" class="card p-3 mb-3 dropzone" style="border: 2px dashed #ccc; border-radius: 10px; background: #f8f9fa; min-height: 100px;">
                                <div class="text-center">
                                    <i class="fas fa-cloud-upload-alt fa-2x text-muted mb-2"></i>
                                    <p class="kanit-regular text-muted">ลากไฟล์มาวางที่นี่ หรือคลิกเพื่อเลือกไฟล์ (.pdf, .jpg, .png, .xls, .xlsx)</p>
                                    <input type="file" id="fileInput" name="files" accept=".pdf,.jpg,.png,.xls,.xlsx" multiple style="display: none;" />
                                    <button type="button" id="selectFileBtn" class="btn btn-outline-primary kanit-medium">เลือกไฟล์</button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- ส่วนแสดงรายการไฟล์ -->
                    <div id="fileList" class="form-group row">
                        <div class="col-12">
                            <label class="kanit-medium">เอกสารที่แนบ</label>
                            <div class="card" style="border-radius: 10px; overflow: hidden;">
                                <div class="list-group" id="fileListContainer">
                                    <!-- ตัวอย่างไฟล์ -->
                                    <div class="list-group-item d-flex align-items-center file-item" style="transition: all 0.3s ease;">
                                        <i class="fas fa-file-image text-primary mr-2"></i>
                                        <a href="#" class="file-link kanit-regular flex-grow-1">File_001.png</a>
                                        <button class="btn btn-outline-danger btn-sm delete-btn" style="border-radius: 20px;" data-file="File_001.png">
                                            <i class="fas fa-trash-alt"></i> ลบ
                                        </button>
                                    </div>
                                    <div class="list-group-item d-flex align-items-center file-item" style="transition: all 0.3s ease;">
                                        <i class="fas fa-file-pdf text-danger mr-2"></i>
                                        <a href="#" class="file-link kanit-regular flex-grow-1">File_002.pdf</a>
                                        <button class="btn btn-outline-danger btn-sm delete-btn" style="border-radius: 20px;" data-file="File_002.pdf">
                                            <i class="fas fa-trash-alt"></i> ลบ
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-------------------------------------------------------------------------------------------------------------------------------->
                    <hr />
                    <div class="form-group row">
                        <div class="col-12">
                            <label for="start_date">ผู้อนุมัติ</label>
                            <div class="col-12">
                                <label for="start_date" style="font-size:14px">ผู้จัดการ</label>
                                <div class="row">
                                    <div class="col-6">
                                        <ul>
                                            <li>AAAAA</li>
                                        </ul>
                                    </div>
                                    <div class="col-6">
                                        <label style="font-size:14px">รออนุมัติ</label>
                                    </div>
                                </div>

                            </div>
                            <div class="col-12">
                                <label for="start_date" style="font-size:14px">แอดมิน</label>
                                <div class="row">
                                    <div class="col-6">
                                        <ul>
                                            <li>BBBBB</li>
                                        </ul>
                                    </div>
                                    <div class="col-6">
                                        <label style="font-size:14px">รออนุมัติ</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer d-flex">
                <button id="btn_delete" type="button" class="btn btn-danger mr-auto elevation-1">
                    <i class="fas fa-trash-alt"></i> ลบ
                </button>
                <button type="button" class="btn btn-secondary elevation-1" data-dismiss="modal">
                    <i class="fas fa-times"></i> ยกเลิก
                </button>
                <button id="btn_accept" type="button" class="btn btn-primary elevation-1">
                    <i class="fas fa-check"></i> ส่งเอกสาร
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Alert -->
<div class="modal fade" id="modal_alert" tabindex="-1" role="dialog" data-backdrop="static">
    <div class="modal modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-warning">
                <h5 class="modal-title" id="modal_alert_title">Alert</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="alert_content" class="form-group">

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Delete -->
<div id="modal_delete" class="modal fade">
    <div class="modal modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger">
                <h5 class="modal-title" id="modal_alert_title">Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <span>Are you sure you want to delete this ?</span>
                    </div>
                </form>
            </div>
            <div class="modal-footer d-flex">
                <button id="btn_confirm_delete" type="button" class="btn btn-danger elevation-1 mr-auto">
                    <i class="fas fa-trash-alt"></i> Confirm Delete
                </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">
                    <i class="fas fa-times"></i> Cancel
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script type="text/javascript">
        let users = [];
        let holidays = [];
        let calendar;
        let calendarEl;
        let drag = false;
        let overlap = true;

        $(document).ready(async function () {
            await GetHolidays();
            await GenerateCalendar();
        });

        async function GetHolidays() {
            await $.ajax({
                type: "GET",
                url: '@Url.Action("GetHolidays", "Holiday")',
	            contentType: 'application/x-www-form-urlencoded',
                data: { },
                success: function (response) {
                    holidays = response;
                }
            });
        };

        async function GenerateCalendar() {
            let datas = [];
            let whs = [];
            for (let i = 0; i < whs.length; i++) {
                let start_date = new Date(whs[i].working_date);
                let enable_edit = false;

                if (eng.role === "Admin" || eng.allow_edit === true) {
                    enable_edit = true;
                } else {
                    let today = new Date();
                    let date_diff = Math.floor((today - start_date) / (1000 * 60 * 60 * 24));
                    enable_edit = date_diff < 15 ? true : false;
                }

                datas.push(
                    {
                        title: whs[i].job_name + ": " + whs[i].task_name,
                        start: start_date.setHours(whs[i].start_time.split(":")[0], whs[i].start_time.split(":")[1]),
                        end: start_date.setHours(whs[i].stop_time.split(":")[0], whs[i].stop_time.split(":")[1]),
                        allDay: false,
                        editable: enable_edit,
                        overlap: true,
                        extendedProps: {
                            "index": whs[i].index,
                            "user_id": whs[i].user_id,
                            "user_name": whs[i].user_name,
                            "working_date": whs[i].working_date,
                            "job_id": whs[i].job_id,
                            "job_name": whs[i].job_name,
                            "process_id": whs[i].process_id,
                            "process_name":whs[i].process_name,
                            "system_id":whs[i].system_id,
                            "system_name":whs[i].system_name,
                            "task_id": whs[i].task_id,
                            "task_name": whs[i].task_name,
                            "start_time": whs[i].start_time,
                            "stop_time": whs[i].stop_time,
                            "wh_type": whs[i].wh_type,
                            "lunch_full": whs[i].lunch_full,
                            "lunch_half": whs[i].lunch_half,
                            "dinner_full": whs[i].dinner_full,
                            "dinner_half": whs[i].dinner_half,
                            "note": whs[i].note,
                        }
                    }
                );
            }

            calendarEl = document.getElementById('calendar');
            calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                views: {
                    dayGridMonth: {
                        displayEventTime: true,
                        displayEventEnd: true,
                        eventTimeFormat: {
                            hour: '2-digit',
                            minute: '2-digit',
                            hour12: false,
                            meridiem: false
                        },
                    }
                },
                headerToolbar: {
                    left: 'dayGridMonth,listMonth,timeGridWeek,timeGridDay',
                    center: 'title',
                    right: 'prev,next'
                },
                events: datas,
                height: 750,
                editable: true,
                eventDrop: async function (info) {
                    let enable = false;
                    let drop_date = new Date(info.event.startStr.split("T")[0]);
                    let today = new Date();
                    let date_diff = Math.floor((today - drop_date) / (1000 * 60 * 60 * 24));
                    let drop_overlap = await CheckDropOverlap(info.event.extendedProps, drop_date.toISOString().split("T")[0]);
                    if (drop_overlap === true) {
                        $('#modal_alert_title').text('Alert Task Overlap');
                        $('#alert_content').html('<p>Task Overlap</p>');
                        $('#modal_alert').modal();
                        info.revert();
                        return;
                    }

                    if (date_diff < 15) {
                        enable = true;
                    }
                    else {
                        enable = CheckAllowEditable();
                    }

                    if (enable == true) {
                        DropTask(info.event);
                    }
                    else {
                        $('#modal_alert_title').text('Alert Edit Task');
                        $('#alert_content').html('<p>You are not allow to edit task in beyond past 2 weeks</p>');
                        $('#modal_alert').modal();
                        info.revert();
                    }
                },
                selectable: true,
                select: function (info) {
                    let date_start = info.startStr;
                    let date_end = info.endStr.split("-")[0] + "-" + info.endStr.split("-")[1] + "-" + parseInt(info.endStr.split("-")[2] - 1).toString().padStart(2,'0');
                    let date_diff = Math.floor((new Date(date_end) - new Date(date_start)) / (1000 * 60 * 60 * 24));
                    if (date_diff === 0 || isNaN(date_diff)) {
                        console.log(info);
                        console.log(date_end);

                        AddTasks(date_start, date_end)
                    }
                    else {
                        AddTasks(date_start,date_end)
                    }
                },
                eventClick: async function (info) {
                    EditTask(info.event);
                },
            });

            let weekend = [
                {
                    daysOfWeek: [0, 6],
                    display: 'background',
                    color: "#CCCCCC",
                    allDay: true,
                    overlap: true,
                    resourceEditable: false
                }
            ];
            calendar.addEventSource(weekend);

            let e_holidays = [];
            for (let i = 0; i < holidays.length; i++) {
                e_holidays.push(
                    {
                        id: (i+1),
                        title: holidays[i].detail,
                        start: holidays[i].date.split("T")[0],
                        display: 'background',
                        color: "#FF9999",
                        allDay: true,
                        overlap: true,
                        resourceEditable: false
                    }
                );
            }

            calendar.addEventSource(e_holidays);
            calendar.render();
        }

        async function AddTasks(date_start, date_end) {
            let show_modal = 0;
            let today = new Date();
            let edit_date = new Date(date_start);
            let date_diff = Math.floor((today - edit_date) / (1000 * 60 * 60 * 24));

            if (date_diff < 15) {
                show_modal = 1;
            }
            else {
                show_modal = await CheckAllowEditable();
            }

            if (show_modal) {
                update = false;
                //await GetLastWorkingHoursID();
                //await GetUsers();
                //await GenerateUsersOption();
                //await GetJobs();
                //await GetQuotations();
                //await GenerateCustomerOptions();
                //await GenerateJobsOption();
                //await GenerateLocationOption();
                //await GetTasks();
                //await GenerateTasksOption();
                PrepmodalTasks(date_start, date_end);

            }
        }

         function PrepmodalTasks(date_start, date_end) {
            $('#modal_leave').modal();
            $('#modal_task_title').text("Add Tasks");
            let user_name = '@Model.name.ToLower()';
            let user_id = users.filter(f => f.name.toLowerCase() === user_name).map(m => m.user_id);
            $('$working_hour_id').val(last_id);
            $('#user_id').val(user_id);
            $('#working_date_group').hide();
            $('#working_date').attr('disabled', true);
            $('#working_date').val(null);
            $('#date_group').show();
            $('#start_date').val(date_start);
            $('#stop_date').val(date_end);
            $('#location').attr('disabled', true);
            $('#task_id').attr('disabled', true);
            $('#start_time').val("08:30");
            $('#stop_time').val("17:30");
            $('#note').val(null);
            $('#btn_delete').hide();
        }

        async function CheckAddOverlap(wh_string) {
            let task = JSON.parse(wh_string);
            let date = task.working_date;
            let start_time = new Date();
            start_time.setHours(task.start_time.split(":")[0]);
            start_time.setMinutes(task.start_time.split(":")[1]);
            start_time.setSeconds(0);
            start_time.setMilliseconds(0);
            let stop_time = new Date();
            stop_time.setHours(task.stop_time.split(":")[0]);
            stop_time.setMinutes(task.stop_time.split(":")[1]);
            stop_time.setSeconds(0);
            stop_time.setMilliseconds(0);
            await GetWorkingHoursByDate("@Model.name", date);
            if (update) {
                wh_day = wh_day.filter(f => f.index !== task.index);
            }
            for (let i = 0; i < wh_day.length; i++) {
                let task_start = new Date();
                let task_stop = new Date();
                task_start.setHours(wh_day[i].start_time.split(":")[0]);
                task_start.setMinutes(wh_day[i].start_time.split(":")[1]);
                task_start.setSeconds(0);
                task_start.setMilliseconds(0);
                task_stop.setHours(wh_day[i].stop_time.split(":")[0]);
                task_stop.setMinutes(wh_day[i].stop_time.split(":")[1]);
                task_stop.setSeconds(0);
                task_stop.setMilliseconds(0);
                if (start_time >= task_start && start_time < task_stop) {
                    return true;
                }
                if (stop_time > task_start && stop_time < task_stop) {
                    return true;
                }
                if (task_start >= start_time && task_start < stop_time) {
                    return true;
                }
                if (task_stop > start_time && task_stop < stop_time) {
                    return true;
                }
            }
            return false;
        }

        async function CheckAddTasksOverlap(wh_string) {
            let task = JSON.parse(wh_string);
            let date = task.working_date;
            let start_time = new Date();
            start_time.setHours(task.start_time.split(":")[0]);
            start_time.setMinutes(task.start_time.split(":")[1]);
            start_time.setSeconds(0);
            start_time.setMilliseconds(0);
            let stop_time = new Date();
            stop_time.setHours(task.stop_time.split(":")[0]);
            stop_time.setMinutes(task.stop_time.split(":")[1]);
            stop_time.setSeconds(0);
            stop_time.setMilliseconds(0);
            await GetWorkingHoursByDate("@Model.name", date);
            for (let i = 0; i < wh_day.length; i++) {
                let task_start = new Date();
                let task_stop = new Date();
                task_start.setHours(wh_day[i].start_time.split(":")[0]);
                task_start.setMinutes(wh_day[i].start_time.split(":")[1]);
                task_start.setSeconds(0);
                task_start.setMilliseconds(0);
                task_stop.setHours(wh_day[i].stop_time.split(":")[0]);
                task_stop.setMinutes(wh_day[i].stop_time.split(":")[1]);
                task_stop.setSeconds(0);
                task_stop.setMilliseconds(0);
                if (start_time >= task_start && start_time < task_stop) {
                    return true;
                }
                if (stop_time > task_start && stop_time < task_stop) {
                    return true;
                }
                if (task_start >= start_time && task_start < stop_time) {
                    return true;
                }
                if (task_stop > start_time && task_stop < stop_time) {
                    return true;
                }
            }
            return false;
        }

        async function CheckDropOverlap(task, date) {
            let start_time = new Date();
            start_time.setHours(task.start_time.split(":")[0]);
            start_time.setMinutes(task.start_time.split(":")[1]);
            start_time.setSeconds(0);
            start_time.setMilliseconds(0);
            let stop_time = new Date();
            stop_time.setHours(task.stop_time.split(":")[0]);
            stop_time.setMinutes(task.stop_time.split(":")[1]);
            stop_time.setSeconds(0);
            stop_time.setMilliseconds(0);
            await GetWorkingHoursByDate("@Model.name", date);
            for (let i = 0; i < wh_day.length; i++) {
                let task_start = new Date();
                task_start.setHours(wh_day[i].start_time.split(":")[0]);
                task_start.setMinutes(wh_day[i].start_time.split(":")[1]);
                task_start.setSeconds(0);
                task_start.setMilliseconds(0);
                let task_stop = new Date();
                task_stop.setHours(wh_day[i].stop_time.split(":")[0]);
                task_stop.setMinutes(wh_day[i].stop_time.split(":")[1]);
                task_stop.setSeconds(0);
                task_stop.setMilliseconds(0);
                if (start_time >= task_start && start_time < task_stop) {
                    return true;
                }
                if (stop_time > task_start && stop_time < task_stop) {
                    return true;
                }
                if (task_start >= start_time && task_start < stop_time) {
                    return true;
                }
                if (task_stop > start_time && task_stop < stop_time) {
                    return true;
                }
            }
            return false;
        }

    </script>

    <script>
        // ฟังก์ชันสำหรับจัดการการแสดงผลเมื่อกดปุ่ม
        document.addEventListener('DOMContentLoaded', function () {
            // ดึง element ของปุ่มและกลุ่มฟอร์ม
            const leaveFullBtn = document.getElementById('leave_full');
            const leaveHalfBtn = document.getElementById('leave_half');
            const leaveHoursBtn = document.getElementById('leave_hours');
            const dateGroup = document.getElementById('date_group');
            const timeGroup = document.getElementById('time_group');
            const durationSelect = timeGroup.querySelector('select');
            const startTimeInput = document.getElementById('start_time');
            const stopTimeInput = document.getElementById('stop_time');
            const daysInput = dateGroup.querySelector('input[type="number"]'); // ช่องลาจำนวน
            // ฟังก์ชันรีเซ็ตการเลือกปุ่ม (ลบ active class)
            function resetButtonStyles() {
                leaveFullBtn.classList.remove('active');
                leaveHalfBtn.classList.remove('active');
                leaveHoursBtn.classList.remove('active');
            }
            // ฟังก์ชันจัดการตัวเลือกใน select สำหรับ leave_half
            function setHalfDayOptions() {
                durationSelect.innerHTML = `
                    <option value="">Select...</option>
                    <option value="morning">ครึ่งวันเช้า</option>
                    <option value="afternoon">ครึ่งวันบ่าย</option>
                `;
                // เพิ่ม event listener สำหรับการเปลี่ยนแปลงใน select
                durationSelect.onchange = function () {
                    if (this.value === 'morning') {
                        startTimeInput.value = '08:30';
                        stopTimeInput.value = '12:00';
                        startTimeInput.disabled = true; // Disable start_time
                    } else if (this.value === 'afternoon') {
                        startTimeInput.value = '13:00';
                        stopTimeInput.value = '17:30';
                        startTimeInput.disabled = true; // Disable start_time
                    } else {
                        startTimeInput.value = '';
                        stopTimeInput.value = '';
                        startTimeInput.disabled = false; // Enable start_time
                    }
                };
            }
            // ฟังก์ชันจัดการตัวเลือกใน select สำหรับ leave_hours
            function setHourlyOptions() {
                durationSelect.innerHTML = `
                    <option value="">Select...</option>
                    <option value="2">2 ชั่วโมง</option>
                    <option value="4">4 ชั่วโมง</option>
                    <option value="6">6 ชั่วโมง</option>
                `;
                // รีเซ็ตค่าเวลาและ enable start_time เมื่อเปลี่ยนเป็นรายชั่วโมง
                durationSelect.onchange = function () {
                    startTimeInput.value = '';
                    stopTimeInput.value = '';
                    startTimeInput.disabled = false; // Enable start_time
                };
            }
            // ฟังก์ชันจัดการ animation เมื่อแสดงหรือซ่อน
            function toggleGroupDisplay(group, show) {
                if (show) {
                    group.style.display = 'flex';
                    group.style.opacity = '0';
                    group.style.transition = 'opacity 0.3s ease-in-out';
                    setTimeout(() => {
                        group.style.opacity = '1';
                    }, 10);
                } else {
                    group.style.opacity = '0';
                    group.style.transition = 'opacity 0.3s ease-in-out';
                    setTimeout(() => {
                        group.style.display = 'none';
                        // รีเซ็ตค่าใน time_group เมื่อซ่อน
                        if (group === timeGroup) {
                            startTimeInput.value = '';
                            stopTimeInput.value = '';
                            durationSelect.value = '';
                            startTimeInput.disabled = false; // Enable start_time
                        }
                    }, 300);
                }
            }
            // เมื่อกดปุ่ม "ทั้งวัน"
            leaveFullBtn.addEventListener('click', function () {
                resetButtonStyles();
                leaveFullBtn.classList.add('active');
                toggleGroupDisplay(dateGroup, true); // แสดง date_group
                toggleGroupDisplay(timeGroup, false); // ซ่อน time_group
                daysInput.disabled = false; // ENABLE ลาจำนวน
            });
            // เมื่อกดปุ่ม "ครึ่งวัน"
            leaveHalfBtn.addEventListener('click', function () {
                resetButtonStyles();
                leaveHalfBtn.classList.add('active');
                toggleGroupDisplay(dateGroup, true); // แสดง date_group
                toggleGroupDisplay(timeGroup, true); // แสดง time_group
                setHalfDayOptions(); // เปลี่ยนตัวเลือกเป็นครึ่งวันเช้า/บ่าย
                daysInput.disabled = true; // DISABLE ลาจำนวน
            });
            // เมื่อกดปุ่ม "รายชั่วโมง"
            leaveHoursBtn.addEventListener('click', function () {
                resetButtonStyles();
                leaveHoursBtn.classList.add('active');
                toggleGroupDisplay(dateGroup, true); // แสดง date_group
                toggleGroupDisplay(timeGroup, true); // แสดง time_group
                setHourlyOptions(); // เปลี่ยนตัวเลือกเป็นรายชั่วโมง
                daysInput.disabled = true; // DISABLE ลาจำนวน
            });
            // เริ่มต้นด้วยการเลือก "ทั้งวัน" เป็นค่าเริ่มต้น
            leaveFullBtn.click();
        });

                // การจัดการอัปโหลดและลบไฟล์
                        document.addEventListener('DOMContentLoaded', function () {
            const fileInput = document.getElementById('fileInput');
            const selectFileBtn = document.getElementById('selectFileBtn');
            const uploadForm = document.getElementById('uploadForm');
            const fileListContainer = document.getElementById('fileListContainer');

            // ตรวจสอบว่า element ทั้งหมดโหลดครบ
            if (!fileInput || !selectFileBtn || !uploadForm || !fileListContainer) {
                console.error('ไม่พบ element ที่จำเป็นสำหรับการอัปโหลดไฟล์');
                return;
            }

            // คลิกปุ่มเลือกไฟล์
            selectFileBtn.addEventListener('click', () => {
                console.log('คลิกปุ่มเลือกไฟล์');
                fileInput.click();
            });

            // การจัดการ drag-and-drop
            uploadForm.addEventListener('dragover', (e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('Drag over dropzone');
                uploadForm.classList.add('dragover');
            });

            uploadForm.addEventListener('dragleave', (e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('Drag leave dropzone');
                uploadForm.classList.remove('dragover');
            });

            uploadForm.addEventListener('drop', (e) => {
                e.preventDefault();
                e.stopPropagation();
                console.log('ไฟล์ถูกวางใน dropzone', e.dataTransfer.files);
                uploadForm.classList.remove('dragover');
                handleFiles(e.dataTransfer.files);
            });

            // การจัดการเมื่อเลือกไฟล์ผ่าน input
            fileInput.addEventListener('change', () => {
                console.log('เลือกไฟล์ผ่าน input', fileInput.files);
                handleFiles(fileInput.files);
                fileInput.value = ''; // รีเซ็ต input เพื่อให้เลือกไฟล์เดิมซ้ำได้
            });

            // ฟังก์ชันจัดการไฟล์
            function handleFiles(files) {
                if (!files || files.length === 0) {
                    console.warn('ไม่มีไฟล์ถูกเลือกหรือวาง');
                    return;
                }

                for (let file of files) {
                    const fileType = file.name.split('.').pop().toLowerCase();
                    const allowedTypes = ['pdf', 'jpg', 'png', 'xls', 'xlsx'];
                    if (!allowedTypes.includes(fileType)) {
                        console.warn(`ประเภทไฟล์ไม่ถูกต้อง: ${file.name}`);
                        showAlert('ประเภทไฟล์ไม่ถูกต้อง! กรุณาอัปโหลดไฟล์ .pdf, .jpg, .png, .xls, หรือ .xlsx');
                        continue;
                    }

                    console.log(`เพิ่มไฟล์: ${file.name}`);
                    const fileItem = document.createElement('div');
                    fileItem.className = 'list-group-item d-flex align-items-center file-item';
                    fileItem.style.opacity = '0';
                    fileItem.innerHTML = `
                        <i class="fas fa-file-${fileType === 'pdf' ? 'pdf text-danger' : 'image text-primary'} mr-2"></i>
                        <a href="#" class="file-link kanit-regular flex-grow-1">${file.name}</a>
                        <button class="btn btn-outline-danger btn-sm delete-btn" style="border-radius: 20px;" data-file="${file.name}">
                            <i class="fas fa-trash-alt"></i> ลบ
                        </button>
                    `;
                    fileListContainer.appendChild(fileItem);

                    // แอนิเมชัน fade-in
                    setTimeout(() => {
                        fileItem.style.opacity = '1';
                    }, 10);
                }
            }

            // การจัดการลบไฟล์
            fileListContainer.addEventListener('click', (e) => {
                const btn = e.target.closest('.delete-btn');
                if (btn) {
                    const fileItem = btn.closest('.file-item');
                    const fileName = btn.dataset.file;
                    console.log(`ลบไฟล์: ${fileName}`);
                    fileItem.style.opacity = '0';
                    setTimeout(() => {
                        fileItem.remove();
                    }, 300);
                }
            });

            // ฟังก์ชันแสดง alert
            function showAlert(message) {
                const modalAlert = document.getElementById('modal_alert');
                const alertContent = document.getElementById('alert_content');
                alertContent.innerHTML = `<p class="kanit-regular">${message}</p>`;
                $(modalAlert).modal('show');
            }
        });

    </script>
}
